Script started on 2023-10-11 19:52:43+05:30 [TERM="xterm-256color" TTY="/dev/pts/3" COLUMNS="148" LINES="35"]
[?2004h(base) ]0;heam@TIGER01951: ~[01;32mheam@TIGER01951[00m:[01;34m~[00m$ git --version[K[K[K[K[K[K[K[K[K[K[K[K[Ksudo apt-get install git
[?2004l[sudo] password for heam: 
Reading package lists... 0%Reading package lists... 100%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree... Done
Reading state information... 0% Reading state information... 0%Reading state information... Done
git is already the newest version (1:2.34.1-1ubuntu1.9).
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
[?2004h(base) ]0;heam@TIGER01951: ~[01;32mheam@TIGER01951[00m:[01;34m~[00m$ git --version
[?2004lgit version 2.34.1
[?2004h(base) ]0;heam@TIGER01951: ~[01;32mheam@TIGER01951[00m:[01;34m~[00m$ git init
[?2004lInitialized empty Git repository in /home/heam/.git/
[?2004h(base) ]0;heam@TIGER01951: ~[01;32mheam@TIGER01951[00m:[01;34m~[00m$ git config
[?2004lusage: git config [<options>]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    --worktree            use per-worktree config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-pattern]
    --get-all             get all values: key [value-pattern]
    --get-regexp          get values for regexp: name-regex [value-pattern]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value-pattern]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-pattern]
    --unset-all           remove all matches: name [value-pattern]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    --fixed-value         use string equality when comparing values to 'value-pattern'
    -e, --edit            open an editor
    --get-color           find the color configured: slot [default]
    --get-colorbool       find the color setting: slot [stdout-is-tty]

Type
    -t, --type <>         value is given this type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --bool-or-str         value is --bool or string
    --path                value is a path (file or directory name)
    --expiry-date         value is an expiry date

Other
    -z, --null            terminate values with NUL byte
    --name-only           show variable names only
    --includes            respect include directives on lookup
    --show-origin         show origin of config (file, standard input, blob, command line)
    --show-scope          show scope of config (worktree, local, global, system, command)
    --default <value>     with --get, use default value when missing entry

[?2004h(base) ]0;heam@TIGER01951: ~[01;32mheam@TIGER01951[00m:[01;34m~[00m$ git config --list[K[K[K[Kglobal user,[K.am[K[Kname=[K "heamkoppisetti"
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~[01;32mheam@TIGER01951[00m:[01;34m~[00m$ git config --global user.name [K[K[K[K[Kemail heam.koppisetti@tih[Kgeranalytics.com
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~[01;32mheam@TIGER01951[00m:[01;34m~[00m$ git config --list
[?2004l[?1h=user.name=heamkoppisetti[m
user.email=heam.koppisetti@tigeranalytics.com[m
init.defaultbranch=sai[m
core.repositoryformatversion=0[m
core.filemode=true[m
core.bare=false[m
core.logallrefupdates=true[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~[01;32mheam@TIGER01951[00m:[01;34m~[00m$ git config --list --show-origin
[?2004l[?1h=file:/home/heam/.gitconfig      user.name=heamkoppisetti[m
file:/home/heam/.gitconfig      user.email=heam.koppisetti@tigeranalytics.com[m
file:/home/heam/.gitconfig      init.defaultbranch=sai[m
file:.git/config        core.repositoryformatversion=0[m
file:.git/config        core.filemode=true[m
file:.git/config        core.bare=false[m
file:.git/config        core.logallrefupdates=true[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~[01;32mheam@TIGER01951[00m:[01;34m~[00m$ git config --li[K[K[K[K--global init.defaultbranch[K[K[K[K[K[K[K[KltBranch n[Kheam
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~[01;32mheam@TIGER01951[00m:[01;34m~[00m$ git config --list
[?2004l[?1h=user.name=heamkoppisetti[m
user.email=heam.koppisetti@tigeranalytics.com[m
init.defaultbranch=heam[m
core.repositoryformatversion=0[m
core.filemode=true[m
core.bare=false[m
core.logallrefupdates=true[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~[01;32mheam@TIGER01951[00m:[01;34m~[00m$ git config usern[K.namw[Kr[Ke
[?2004lheamkoppisetti
[?2004h(base) ]0;heam@TIGER01951: ~[01;32mheam@TIGER01951[00m:[01;34m~[00m$ git help
[?2004lusage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--super-prefix=<path>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.
[?2004h(base) ]0;heam@TIGER01951: ~[01;32mheam@TIGER01951[00m:[01;34m~[00m$ git help cpnfog[K[K[K[K[Konfig
[?2004l[?1049h[22;0;0t[?1h=GIT-CONFIG(1)                                                      Git Manual                                                      GIT-CONFIG(1)[m
[m
[1mNAME[0m[m
       git-config - Get and set repository or global options[m
[m
[1mSYNOPSIS[0m[m
       [4mgit[24m [4mconfig[24m [<file-option>] [--type=<type>] [--fixed-value] [--show-origin] [--show-scope] [-z|--null] name [value [value-pattern]][m
       [4mgit[24m [4mconfig[24m [<file-option>] [--type=<type>] --add name value[m
       [4mgit[24m [4mconfig[24m [<file-option>] [--type=<type>] [--fixed-value] --replace-all name value [value-pattern][m
       [4mgit[24m [4mconfig[24m [<file-option>] [--type=<type>] [--show-origin] [--show-scope] [-z|--null] [--fixed-value] --get name [value-pattern][m
       [4mgit[24m [4mconfig[24m [<file-option>] [--type=<type>] [--show-origin] [--show-scope] [-z|--null] [--fixed-value] --get-all name [value-pattern][m
       [4mgit[24m [4mconfig[24m [<file-option>] [--type=<type>] [--show-origin] [--show-scope] [-z|--null] [--fixed-value] [--name-only] --get-regexp name_regex [[m value-pattern][m
       [4mgit[24m [4mconfig[24m [<file-option>] [--type=<type>] [-z|--null] --get-urlmatch name URL[m
       [4mgit[24m [4mconfig[24m [<file-option>] [--fixed-value] --unset name [value-pattern][m
       [4mgit[24m [4mconfig[24m [<file-option>] [--fixed-value] --unset-all name [value-pattern][m
       [4mgit[24m [4mconfig[24m [<file-option>] --rename-section old_name new_name[m
       [4mgit[24m [4mconfig[24m [<file-option>] --remove-section name[m
       [4mgit[24m [4mconfig[24m [<file-option>] [--show-origin] [--show-scope] [-z|--null] [--name-only] -l | --list[m
       [4mgit[24m [4mconfig[24m [<file-option>] --get-color name [default][m
       [4mgit[24m [4mconfig[24m [<file-option>] --get-colorbool name [stdout-is-tty][m
       [4mgit[24m [4mconfig[24m [<file-option>] -e | --edit[m
[m
[1mDESCRIPTION[0m[m
       You can query/set/replace/unset options with this command. The name is actually the section and the key separated by a dot, and the value[m
       will be escaped.[m
[m
       Multiple lines can be added to an option by using the [1m--add[0m option. If you want to update or unset an option which can occur on multiple[m
       lines, a [1mvalue-pattern[0m (which is an extended regular expression, unless the [1m--fixed-value[0m option is given) needs to be given. Only the[m
       existing values that match the pattern are updated or unset. If you want to handle the lines that do [1mnot[0m match the pattern, just prepend[m
       a single exclamation mark in front (see also the section called “EXAMPLES”), but note that this only works when the [1m--fixed-value[0m option[m
       is not in use.[m
[m
       The [1m--type=<type>[0m option instructs [4mgit[24m [4mconfig[24m to ensure that incoming and outgoing values are canonicalize-able under the given <type>.[m
[7m Manual page git-config(1) line 1 (press h for help or q to quit)[27m[K[K[?1l>[?1049l[23;0;0t[?2004h(base) ]0;heam@TIGER01951: ~[01;32mheam@TIGER01951[00m:[01;34m~[00m$ git add -h
[?2004lusage: git add [<options>] [--] <pathspec>...

    -n, --dry-run         dry run
    -v, --verbose         be verbose

    -i, --interactive     interactive picking
    -p, --patch           select hunks interactively
    -e, --edit            edit current diff and apply
    -f, --force           allow adding otherwise ignored files
    -u, --update          update tracked files
    --renormalize         renormalize EOL of tracked files (implies -u)
    -N, --intent-to-add   record only the fact that the path will be added later
    -A, --all             add changes from all tracked and untracked files
    --ignore-removal      ignore paths removed in the working tree (same as --no-all)
    --refresh             don't add, only refresh the index
    --ignore-errors       just skip files which cannot be added because of errors
    --ignore-missing      check if - even missing - files are ignored in dry run
    --sparse              allow updating entries outside of the sparse-checkout cone
    --chmod (+|-)x        override the executable bit of the listed files
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character

[?2004h(base) ]0;heam@TIGER01951: ~[01;32mheam@TIGER01951[00m:[01;34m~[00m$ cd mu[K[K/home [K/heam/my_project
[?2004lbash: cd: /home/heam/my_project: No such file or directory
[?2004h(base) ]0;heam@TIGER01951: ~[01;32mheam@TIGER01951[00m:[01;34m~[00m$ ls
[?2004l[0m[01;34mminiconda3[0m  my_git_session  my_miniconda_session  my_unix_session  [01;34mmyproject[0m
[?2004h(base) ]0;heam@TIGER01951: ~[01;32mheam@TIGER01951[00m:[01;34m~[00m$ lscd /home/heam/my_project[1Pproject
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject[01;32mheam@TIGER01951[00m:[01;34m~/myproject[00m$ git init
[?2004lReinitialized existing Git repository in /home/heam/myproject/.git/
[?2004h(base) ]0;heam@TIGER01951: ~/myproject[01;32mheam@TIGER01951[00m:[01;34m~/myproject[00m$ git add*.c *.c[C[C[C
[?2004lfatal: pathspec '*.c' did not match any files
[?2004h(base) ]0;heam@TIGER01951: ~/myproject[01;32mheam@TIGER01951[00m:[01;34m~/myproject[00m$ git add LICENSE
[?2004lfatal: pathspec 'LICENSE' did not match any files
[?2004h(base) ]0;heam@TIGER01951: ~/myproject[01;32mheam@TIGER01951[00m:[01;34m~/myproject[00m$ ls
[?2004l1.txt  [0m[01;34mAssignment_1.1[0m  [01;34mnewgit[0m  [01;34mnewgit2[0m  [01;34mvyeshma[0m
[?2004h(base) ]0;heam@TIGER01951: ~/myproject[01;32mheam@TIGER01951[00m:[01;34m~/myproject[00m$ git clone [7mhttps://github.com/heamkoppisetti/Assignment.git[27m[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Chttps://github.com/heamkoppisetti/Assignment.git myass[K[K[K_assignment
[?2004lCloning into 'my_assignment'...
remote: Enumerating objects: 15, done.[K
remote: Counting objects:   6% (1/15)[Kremote: Counting objects:  13% (2/15)[Kremote: Counting objects:  20% (3/15)[Kremote: Counting objects:  26% (4/15)[Kremote: Counting objects:  33% (5/15)[Kremote: Counting objects:  40% (6/15)[Kremote: Counting objects:  46% (7/15)[Kremote: Counting objects:  53% (8/15)[Kremote: Counting objects:  60% (9/15)[Kremote: Counting objects:  66% (10/15)[Kremote: Counting objects:  73% (11/15)[Kremote: Counting objects:  80% (12/15)[Kremote: Counting objects:  86% (13/15)[Kremote: Counting objects:  93% (14/15)[Kremote: Counting objects: 100% (15/15)[Kremote: Counting objects: 100% (15/15), done.[K
remote: Compressing objects:  11% (1/9)[Kremote: Compressing objects:  22% (2/9)[Kremote: Compressing objects:  33% (3/9)[Kremote: Compressing objects:  44% (4/9)[Kremote: Compressing objects:  55% (5/9)[Kremote: Compressing objects:  66% (6/9)[Kremote: Compressing objects:  77% (7/9)[Kremote: Compressing objects:  88% (8/9)[Kremote: Compressing objects: 100% (9/9)[Kremote: Compressing objects: 100% (9/9), done.[K
remote: Total 15 (delta 2), reused 10 (delta 1), pack-reused 0[K
Receiving objects:   6% (1/15)Receiving objects:  13% (2/15)Receiving objects:  20% (3/15)Receiving objects:  26% (4/15)Receiving objects:  33% (5/15)Receiving objects:  40% (6/15)Receiving objects:  46% (7/15)Receiving objects:  53% (8/15)Receiving objects:  60% (9/15)Receiving objects:  66% (10/15)Receiving objects:  73% (11/15)Receiving objects:  80% (12/15)Receiving objects:  86% (13/15)Receiving objects:  93% (14/15)Receiving objects: 100% (15/15)Receiving objects: 100% (15/15), done.
Resolving deltas:   0% (0/2)Resolving deltas:  50% (1/2)Resolving deltas: 100% (2/2)Resolving deltas: 100% (2/2), done.
[?2004h(base) ]0;heam@TIGER01951: ~/myproject[01;32mheam@TIGER01951[00m:[01;34m~/myproject[00m$ gti [K[K[Kiy[Kt status
[?2004lOn branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	[31mmodified:   newgit[m (new commits)

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	[31mAssignment_1.1/[m
	[31mmy_assignment/[m
	[31mnewgit2/[m
	[31mvyeshma/[m

no changes added to commit (use "git add" and/or "git commit -a")
[?2004h(base) ]0;heam@TIGER01951: ~/myproject[01;32mheam@TIGER01951[00m:[01;34m~/myproject[00m$ d[Kgit add *
[?2004lwarning: adding embedded git repository: Assignment_1.1
[33mhint: You've added another git repository inside your current repository.[m
[33mhint: Clones of the outer repository will not contain the contents of[m
[33mhint: the embedded repository and will not know how to obtain it.[m
[33mhint: If you meant to add a submodule, use:[m
[33mhint: [m
[33mhint: 	git submodule add <url> Assignment_1.1[m
[33mhint: [m
[33mhint: If you added this path by mistake, you can remove it from the[m
[33mhint: index with:[m
[33mhint: [m
[33mhint: 	git rm --cached Assignment_1.1[m
[33mhint: [m
[33mhint: See "git help submodule" for more information.[m
warning: adding embedded git repository: my_assignment
warning: adding embedded git repository: newgit2
warning: adding embedded git repository: vyeshma
[?2004h(base) ]0;heam@TIGER01951: ~/myproject[01;32mheam@TIGER01951[00m:[01;34m~/myproject[00m$ cd my_assignment
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git status
[?2004lOn branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ echo 'MY PROJECT' > README
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git status
[?2004lOn branch main
Your branch is up to date with 'origin/main'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	[31mREADME[m

nothing added to commit but untracked files present (use "git add" to track)
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git add README
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ gir [Kt[K[Kt commit =[K-m [K[K[K[K[K[K[K[K[K[Kstatus
[?2004lOn branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mnew file:   README[m

[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ nano CONTRIBUTE[KING.md
[?2004l[?2004h[?1049h[22;0;0t[1;35r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[33;69H(B[0;7m[ New File ](B[m[H(B[0;7m  GNU nano 6.2                                                       CONTRIBUTING.md                                                                [1;147H(B[m[34d(B[0;7m^G(B[m Help[34;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[34;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[34;113H(B[0;7mM-A(B[m Set Mark    (B[0;7mM-](B[m To Bracket[35d(B[0;7m^X(B[m Exit[35;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[35;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^/(B[m Go To Line   (B[0;7mM-E(B[m Redo[35;113H(B[0;7mM-6(B[m Copy[35;129H(B[0;7m^Q(B[m Where Was[2d[?12l[?25h[?25l[1;86H(B[0;7m*[147G(B[m[?12l[?25h[2dH[?25l[?12l[?25hi[?25l[?12l[?25h [?25l[?12l[?25ht[?25l[?12l[?25hh[?25l[?12l[?25hi[?25l[?12l[?25hs[?25l[?12l[?25h [?25l[?12l[?25hi[?25l[?12l[?25hs[?25l[?12l[?25h [?25l[?12l[?25hS[?25l[?12l[?25ha[?25l[?12l[?25hi[?25l[?12l[?25h [?25l[?12l[?25h [?25l[?12l[?25h [?25l[?12l[?25hH[?25l[?12l[?25he[?25l[33d[K[?12l[?25h[2;14Ha[?25l[?12l[?25hm[?25l[33;68H(B[0;7m[ Writing... ](B[m[1;86H(B[0;7m [147G(B[m[33;67H(B[0;7m[ Wrote 1 line ](B[m[?12l[?25h[2;16H[?25l[33d[J[35d[?12l[?25h[35;1H[?1049l[23;0;0t[?1l>[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git status
[?2004lOn branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mnew file:   README[m

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	[31mCONTRIBUTING.md[m

[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git add CONTRIBUTING.md 
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git status
[?2004lOn branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mnew file:   CONTRIBUTING.md[m
	[32mnew file:   README[m

[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ nani[Ko CONTRIBUTING.md 
[?2004l[?2004h[?1049h[22;0;0t[1;35r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[33;68H(B[0;7m[ Reading... ](B[m[33;67H(B[0;7m[ Read 1 line ](B[m[H(B[0;7m  GNU nano 6.2                                                       CONTRIBUTING.md                                                                [1;147H(B[m[34d(B[0;7m^G(B[m Help[34;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[34;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[34;113H(B[0;7mM-A(B[m Set Mark    (B[0;7mM-](B[m To Bracket[35d(B[0;7m^X(B[m Exit[35;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[35;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^/(B[m Go To Line   (B[0;7mM-E(B[m Redo[35;113H(B[0;7mM-6(B[m Copy[35;129H(B[0;7m^Q(B[m Where Was[2dHi this is Heam[?12l[?25h[?25l[?12l[?25h[3d[?25l[1;86H(B[0;7m*[147G(B[m[?12l[?25h[3dF[?25l[?12l[?25hr[?25l[?12l[?25ho[?25l[?12l[?25hm[?25l[?12l[?25h [?25l[?12l[?25hA[?25l[?12l[?25hn[?25l[?12l[?25hd[?25l[?12l[?25hh[?25l[?12l[?25hr[?25l[?12l[?25ha[?25l[?12l[?25h [?25l[?12l[?25hP[?25l[?12l[?25hr[?25l[?12l[?25ha[?25l[?12l[?25hd[?25l[?12l[?25he[?25l[?12l[?25hs[?25l[33d[K[?12l[?25h[3;19Hh[?25l[33;68H(B[0;7m[ Writing... ](B[m[1;86H(B[0;7m [147G(B[m[33;66H(B[0;7m[ Wrote 2 lines ](B[m[?12l[?25h[3;20H[?25l[33d[J[35d[?12l[?25h[35;1H[?1049l[23;0;0t[?1l>[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ nano CONTRIBUTING.md [11Pgit status
[?2004lOn branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mnew file:   CONTRIBUTING.md[m
	[32mnew file:   README[m

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	[31mmodified:   CONTRIBUTING.md[m

[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git statusnano CONTRIBUTING.md [11Pgit statusadd CONTRIBUTING.md 
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git add CONTRIBUTING.md status[K
[?2004lOn branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mnew file:   CONTRIBUTING.md[m
	[32mnew file:   README[m

[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git status -s
[?2004l[32mA[m  CONTRIBUTING.md
[32mA[m  README
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ cat .gitignore
[?2004lcat: .gitignore: No such file or directory
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git diff
[?2004l[?1h=[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ nano c[KCONTRIBUTING.md 
[?2004l[?2004h[?1049h[22;0;0t[1;35r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[33;68H(B[0;7m[ Reading... ](B[m[33;67H(B[0;7m[ Read 2 lines ](B[m[H(B[0;7m  GNU nano 6.2                                                       CONTRIBUTING.md                                                                [1;147H(B[m[34d(B[0;7m^G(B[m Help[34;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[34;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[34;113H(B[0;7mM-A(B[m Set Mark    (B[0;7mM-](B[m To Bracket[35d(B[0;7m^X(B[m Exit[35;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[35;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^/(B[m Go To Line   (B[0;7mM-E(B[m Redo[35;113H(B[0;7mM-6(B[m Copy[35;129H(B[0;7m^Q(B[m Where Was[2dHi this is Heam[3dFrom Andhra Pradesh[A[?12l[?25h[?25l[?12l[?25h[3d[?25l[?12l[?25h[4d[?25l[?12l[?25h[?25l[1;86H(B[0;7m*[147G(B[m[?12l[?25h[4dw[?25l[?12l[?25ho[?25l[?12l[?25hr[?25l[?12l[?25hk[?25l[?12l[?25hi[?25l[?12l[?25hn[?25l[?12l[?25hg[?25l[?12l[?25hi[?25l[?12l[?25h [?25l[?12l[?25h [?25l[?12l[?25hi[?25l[?12l[?25hn[?25l[?12l[?25h [?25l[?12l[?25hT[?25l[?12l[?25hi[?25l[?12l[?25hh[?25l[33d[K[?12l[?25h[4;14H [?25l[?12l[?25hg[?25l[?12l[?25he[?25l[?12l[?25hr[?25l[?12l[?25h [?25l[?12l[?25hA[?25l[?12l[?25hn[?25l[?12l[?25ha[?25l[?12l[?25hl[?25l[?12l[?25hy[?25l[?12l[?25ht[?25l[?12l[?25hi[?25l[?12l[?25hc[?25l[?12l[?25hs[?25l[33;68H(B[0;7m[ Writing... ](B[m[1;86H(B[0;7m [147G(B[m[33;66H(B[0;7m[ Wrote 3 lines ](B[m[?12l[?25h[4;27H[?25l[33d[J[35d[?12l[?25h[35;1H[?1049l[23;0;0t[?1l>[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ nano CONTRIBUTING.md [13Pgit diffcat .gitignore[6Pgit diff[K[K[K[Kstatus
[?2004lOn branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mnew file:   CONTRIBUTING.md[m
	[32mnew file:   README[m

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	[31mmodified:   CONTRIBUTING.md[m

[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git diff
[?2004l[?1h=[1mdiff --git a/CONTRIBUTING.md b/CONTRIBUTING.md[m[m
[1mindex 283425b..3bbc2d1 100644[m[m
[1m--- a/CONTRIBUTING.md[m[m
[1m+++ b/CONTRIBUTING.md[m[m
[36m@@ -1,2 +1,3 @@[m[m
 Hi this is Heam[m[m
 From Andhra Pradesh[m[m
[32m+[m[32mworking in Tiger Analytics[m[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git diff --staged
[?2004l[?1h=[1mdiff --git a/CONTRIBUTING.md b/CONTRIBUTING.md[m[m
[1mnew file mode 100644[m[m
[1mindex 0000000..283425b[m[m
[1m--- /dev/null[m[m
[1m+++ b/CONTRIBUTING.md[m[m
[36m@@ -0,0 +1,2 @@[m[m
[32m+[m[32mHi this is Heam[m[m
[32m+[m[32mFrom Andhra Pradesh[m[m
[1mdiff --git a/README b/README[m[m
[1mnew file mode 100644[m[m
[1mindex 0000000..ba5ed3b[m[m
[1m--- /dev/null[m[m
[1m+++ b/README[m[m
[36m@@ -0,0 +1 @@[m[m
[32m+[m[32mMY PROJECT[m[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git add CONTRIBUTING.md 
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ echo "#test [1@ [C[C[C[C[Cline" >> CONTRIBUTING.md 
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git state[Kus
[?2004lOn branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mnew file:   CONTRIBUTING.md[m
	[32mnew file:   README[m

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	[31mmodified:   CONTRIBUTING.md[m

[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git diff
[?2004l[?1h=[1mdiff --git a/CONTRIBUTING.md b/CONTRIBUTING.md[m[m
[1mindex 3bbc2d1..1b7278c 100644[m[m
[1m--- a/CONTRIBUTING.md[m[m
[1m+++ b/CONTRIBUTING.md[m[m
[36m@@ -1,3 +1,4 @@[m[m
 Hi this is Heam[m[m
 From Andhra Pradesh[m[m
 working in Tiger Analytics[m[m
[32m+[m[32m# test line[m[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ gti[K[Kit diff --cached
[?2004l[?1h=[1mdiff --git a/CONTRIBUTING.md b/CONTRIBUTING.md[m[m
[1mnew file mode 100644[m[m
[1mindex 0000000..3bbc2d1[m[m
[1m--- /dev/null[m[m
[1m+++ b/CONTRIBUTING.md[m[m
[36m@@ -0,0 +1,3 @@[m[m
[32m+[m[32mHi this is Heam[m[m
[32m+[m[32mFrom Andhra Pradesh[m[m
[32m+[m[32mworking in Tiger Analytics[m[m
[1mdiff --git a/README b/README[m[m
[1mnew file mode 100644[m[m
[1mindex 0000000..ba5ed3b[m[m
[1m--- /dev/null[m[m
[1m+++ b/README[m[m
[36m@@ -0,0 +1 @@[m[m
[32m+[m[32mMY PROJECT[m[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git status
[?2004lOn branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mnew file:   CONTRIBUTING.md[m
	[32mnew file:   README[m

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	[31mmodified:   CONTRIBUTING.md[m

[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git ad [Kd CONTRIBUTING.md 
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git statsu[K[Kus
[?2004lOn branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mnew file:   CONTRIBUTING.md[m
	[32mnew file:   README[m

[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git commit [K
[?2004lhint: Waiting for your editor to close the file... [?2004h[?1049h[22;0;0t[1;35r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[33;68H(B[0;7m[ Reading... ](B[m[33;66H(B[0;7m[ Read 11 lines ](B[m[H(B[0;7m  GNU nano 6.2                                   /home/heam/myproject/my_assignment/.git/COMMIT_EDITMSG                                             [1;147H(B[m[34d(B[0;7m^G(B[m Help[34;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[34;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[34;113H(B[0;7mM-A(B[m Set Mark    (B[0;7mM-](B[m To Bracket[35d(B[0;7m^X(B[m Exit[35;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[35;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^/(B[m Go To Line   (B[0;7mM-E(B[m Redo[35;113H(B[0;7mM-6(B[m Copy[35;129H(B[0;7m^Q(B[m Where Was[3d[36m# Please enter the commit message for your changes. Lines starting[4d# with '#' will be ignored, and an empty message aborts the commit.[5d#[6d# On branch main[7d# Your branch is up to date with 'origin/main'.[8d#[9d# Changes to be committed:[10d#[38;5;208m       [36mnew file:   CONTRIBUTING.md[11d#[38;5;208m       [36mnew file:   README[12d#[2d[39m(B[m[?12l[?25h[?25l[1;105H(B[0;7m*[147G(B[m[?12l[?25h[2dc[?25l[?12l[?25ho[?25l[?12l[?25hm[?25l[?12l[?25hi[?25l[?12l[?25h [?25l[?12l[?25h [?25l[?12l[?25h [?25l[?12l[?25h[K[?25l[?12l[?25h[?25l[?12l[?25hI[?25l[?12l[?25hn[?25l[?12l[?25hi[?25l[?12l[?25ht[?25l[?12l[?25hi[?25l[?12l[?25ha[?25l[?12l[?25hl[?25l[?12l[?25h [?25l[?12l[?25hC[?25l[?12l[?25ho[?25l[33d[K[?12l[?25h[2;11Hm[?25l[?12l[?25hm[?25l[?12l[?25hi[?25l[?12l[?25ht[?25l[33;68H(B[0;7m[ Writing... ](B[m[1;105H(B[0;7m [147G(B[m[33;66H(B[0;7m[ Wrote 11 lines ](B[m[?12l[?25h[2;15H[?25l[33d[J[35d[?12l[?25h[35;1H[?1049l[23;0;0t[?1l>[?2004l[K[main 98b7bc1] Initial Commit
 2 files changed, 5 insertions(+)
 create mode 100644 CONTRIBUTING.md
 create mode 100644 README
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ nano Con[K[KONTRIBUTING.md [K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K1.txt
[?2004l[?2004h[?1049h[22;0;0t[1;35r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[33;68H(B[0;7m[ Reading... ](B[m[33;67H(B[0;7m[ Read 2 lines ](B[m[H(B[0;7m  GNU nano 6.2                                                            1.txt                                                                     [1;147H(B[m[34d(B[0;7m^G(B[m Help[34;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[34;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[34;113H(B[0;7mM-A(B[m Set Mark    (B[0;7mM-](B[m To Bracket[35d(B[0;7m^X(B[m Exit[35;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[35;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^/(B[m Go To Line   (B[0;7mM-E(B[m Redo[35;113H(B[0;7mM-6(B[m Copy[35;129H(B[0;7m^Q(B[m Where Was[2dblah blah blah blah ahhhhhhhhhhhhhhhhhhhhhhhhh[3dheloooooooooo[A[?12l[?25h[?25l[33;67H (B[0;7m[ Writing... ](B[m[K[1;147H[33;66H(B[0;7m[ Wrote 2 lines ](B[m[?12l[?25h[2d[?25l[33d[J[35d[?12l[?25h[35;1H[?1049l[23;0;0t[?1l>[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ ls
[?2004l1.txt  CONTRIBUTING.md  README  README.md  first.txt  s.txt
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ lsnano 1.txt
[?2004l[?2004h[?1049h[22;0;0t[1;35r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[33;68H(B[0;7m[ Reading... ](B[m[33;67H(B[0;7m[ Read 2 lines ](B[m[H(B[0;7m  GNU nano 6.2                                                            1.txt                                                                     [1;147H(B[m[34d(B[0;7m^G(B[m Help[34;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[34;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[34;113H(B[0;7mM-A(B[m Set Mark    (B[0;7mM-](B[m To Bracket[35d(B[0;7m^X(B[m Exit[35;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[35;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^/(B[m Go To Line   (B[0;7mM-E(B[m Redo[35;113H(B[0;7mM-6(B[m Copy[35;129H(B[0;7m^Q(B[m Where Was[2dblah blah blah blah ahhhhhhhhhhhhhhhhhhhhhhhhh[3dheloooooooooo[A[?12l[?25h[?25l[?12l[?25h[3d[?25l[?12l[?25h[4d[?25l[?12l[?25h[?25l[1;81H(B[0;7m*[147G(B[m[?12l[?25h[4df[?25l[?12l[?25hi[?25l[?12l[?25hr[?25l[?12l[?25h [?25l[?12l[?25hl[?25l[?12l[?25hr[?25l[?12l[?25h [?25l[?12l[?25h[?25l[?12l[?25h [?25l[?12l[?25he[?25l[?12l[?25h [?25l[?12l[?25hc[?25l[?12l[?25hr[?25l[?12l[?25he[?25l[?12l[?25ha[?25l[?12l[?25ht[?25l[33d[K[?12l[?25h[4;11He[?25l[?12l[?25hd[?25l[?12l[?25h [?25l[?12l[?25hb[?25l[?12l[?25hy[?25l[?12l[?25h [?25l[?12l[?25hH[?25l[?12l[?25he[?25l[?12l[?25ha[?25l[?12l[?25hm[?25l[33;68H(B[0;7m[ Writing... ](B[m[1;81H(B[0;7m [147G(B[m[33;66H(B[0;7m[ Wrote 3 lines ](B[m[?12l[?25h[4;21H[?25l[33d[J[35d[?12l[?25h[35;1H[?1049l[23;0;0t[?1l>[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git status
[?2004lOn branch main
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	[31mmodified:   1.txt[m

no changes added to commit (use "git add" and/or "git commit -a")
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git commit a[K-a -m "Direct commit the files"
[?2004l[main ce1367e] Direct commit the files
 1 file changed, 1 insertion(+)
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git status
[?2004lOn branch main
Your branch is ahead of 'origin/main' by 2 commits.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ rm READE[KME.[K.md
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git status
[?2004lOn branch main
Your branch is ahead of 'origin/main' by 2 commits.
  (use "git push" to publish your local commits)

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	[31mdeleted:    README.md[m

no changes added to commit (use "git add" and/or "git commit -a")
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git rm README.md
[?2004lrm 'README.md'
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git status
[?2004lOn branch main
Your branch is ahead of 'origin/main' by 2 commits.
  (use "git push" to publish your local commits)

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mdeleted:    README.md[m

[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git rm --cached README
[?2004lrm 'README'
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ gti [K[K[Kit status
[?2004lOn branch main
Your branch is ahead of 'origin/main' by 2 commits.
  (use "git push" to publish your local commits)

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mdeleted:    README[m
	[32mdeleted:    README.md[m

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	[31mREADME[m

[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git comm[K[K[K[Kadd README
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git commiy[Kt
[?2004lhint: Waiting for your editor to close the file... [?2004h[?1049h[22;0;0t[1;35r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[33;68H(B[0;7m[ Reading... ](B[m[33;66H(B[0;7m[ Read 11 lines ](B[m[H(B[0;7m  GNU nano 6.2                                   /home/heam/myproject/my_assignment/.git/COMMIT_EDITMSG                                             [1;147H(B[m[34d(B[0;7m^G(B[m Help[34;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[34;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[34;113H(B[0;7mM-A(B[m Set Mark    (B[0;7mM-](B[m To Bracket[35d(B[0;7m^X(B[m Exit[35;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[35;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^/(B[m Go To Line   (B[0;7mM-E(B[m Redo[35;113H(B[0;7mM-6(B[m Copy[35;129H(B[0;7m^Q(B[m Where Was[3d[36m# Please enter the commit message for your changes. Lines starting[4d# with '#' will be ignored, and an empty message aborts the commit.[5d#[6d# On branch main[7d# Your branch is ahead of 'origin/main' by 2 commits.[8d#   (use "git push" to publish your local commits)[9d#[10d# Changes to be committed:[11d#[38;5;208m       [36mdeleted:    README.md[12d#[2d[39m(B[m[?12l[?25h[?25l[1;105H(B[0;7m*[147G(B[m[?12l[?25h[2dc[?25l[?12l[?25ho[?25l[?12l[?25hm[?25l[?12l[?25hm[?25l[?12l[?25hi[?25l[?12l[?25ht[?25l7[3;32r8[3dM[1;35r[3;1H[?12l[?25h[?25l[3;32r[32;1H
[1;35r[2;7H[?12l[?25h[?25l[33;66H  (B[0;7m[ Writing... ](B[m[K[1;105H(B[0;7m [147G(B[m[33;66H(B[0;7m[ Wrote 11 lines ](B[m[?12l[?25h[2;7H[?25l[33d[J[35d[?12l[?25h[35;1H[?1049l[23;0;0t[?1l>[?2004l[K[main 2280b2b] commit
 1 file changed, 1 deletion(-)
 delete mode 100644 README.md
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ gti [K[K[Kit sts[Katus
[?2004lOn branch main
Your branch is ahead of 'origin/main' by 3 commits.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git C[Kmv CONTRIBUTING.md README.md
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git stay[Ktus
[?2004lOn branch main
Your branch is ahead of 'origin/main' by 3 commits.
  (use "git push" to publish your local commits)

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mrenamed:    CONTRIBUTING.md -> README.md[m

[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git commit -m "Co[K[Kr[KRenamed Successfy[Kully"
[?2004l[main 7aa6112] Renamed Successfully
 1 file changed, 0 insertions(+), 0 deletions(-)
 rename CONTRIBUTING.md => README.md (100%)
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git log
[?2004l[?1h=[33mcommit 7aa6112d6348fdc7ff3eb1b5dc102a794e66cd49[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m[m
Author: heamkoppisetti <heam.koppisetti@tigeranalytics.com>[m
Date:   Wed Oct 11 21:21:00 2023 +0530[m
[m
    Renamed Successfully[m
[m
[33mcommit 2280b2bc1b1f2e42fa29456d933221f30682105e[m[m
Author: heamkoppisetti <heam.koppisetti@tigeranalytics.com>[m
Date:   Wed Oct 11 21:19:26 2023 +0530[m
[m
    commit[m
[m
[33mcommit ce1367ec9144620d923f60c95e6425b04485e743[m[m
Author: heamkoppisetti <heam.koppisetti@tigeranalytics.com>[m
Date:   Wed Oct 11 20:51:45 2023 +0530[m
[m
    Direct commit the files[m
[m
[33mcommit 98b7bc1ac9ea11bef71142029839ad7d459a6abb[m[m
Author: heamkoppisetti <heam.koppisetti@tigeranalytics.com>[m
Date:   Wed Oct 11 20:48:59 2023 +0530[m
[m
    Initial Commit[m
[m
[33mcommit b966d2393e0f40acb926cdeb28e1daa29800874d[m[33m ([m[1;31morigin/main[m[33m, [m[1;31morigin/HEAD[m[33m)[m[m
Author: heamkoppisetti <147583059+heamkoppisetti@users.noreply.github.com>[m
Date:   Wed Oct 11 22:05:00 2023 +0530[m
[m
    Create README.md[m
[m
[33mcommit b119a29baca9bff823de4cdda9f6d8aadce86edf[m[m
Merge: 4668d25 4a82947[m
Author: heamkoppisetti <147583059+heamkoppisetti@users.noreply.github.com>[m
Date:   Wed Oct 11 18:00:46 2023 +0530[m
:[K[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ gity [K[K log -p -2
[?2004l[?1h=[33mcommit 7aa6112d6348fdc7ff3eb1b5dc102a794e66cd49[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m[m
Author: heamkoppisetti <heam.koppisetti@tigeranalytics.com>[m
Date:   Wed Oct 11 21:21:00 2023 +0530[m
[m
    Renamed Successfully[m
[m
[1mdiff --git a/CONTRIBUTING.md b/README.md[m[m
[1msimilarity index 100%[m[m
[1mrename from CONTRIBUTING.md[m[m
[1mrename to README.md[m[m
[m
[33mcommit 2280b2bc1b1f2e42fa29456d933221f30682105e[m[m
Author: heamkoppisetti <heam.koppisetti@tigeranalytics.com>[m
Date:   Wed Oct 11 21:19:26 2023 +0530[m
[m
    commit[m
[m
[1mdiff --git a/README.md b/README.md[m[m
[1mdeleted file mode 100644[m[m
[1mindex 96c76c1..0000000[m[m
[1m--- a/README.md[m[m
[1m+++ /dev/null[m[m
[36m@@ -1 +0,0 @@[m[m
[31m-# Assignment[m[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git log --stat
[?2004l[?1h=[33mcommit 7aa6112d6348fdc7ff3eb1b5dc102a794e66cd49[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m[m
Author: heamkoppisetti <heam.koppisetti@tigeranalytics.com>[m
Date:   Wed Oct 11 21:21:00 2023 +0530[m
[m
    Renamed Successfully[m
[m
 CONTRIBUTING.md => README.md | 0[m
 1 file changed, 0 insertions(+), 0 deletions(-)[m
[m
[33mcommit 2280b2bc1b1f2e42fa29456d933221f30682105e[m[m
Author: heamkoppisetti <heam.koppisetti@tigeranalytics.com>[m
Date:   Wed Oct 11 21:19:26 2023 +0530[m
[m
    commit[m
[m
 README.md | 1 [31m-[m[m
 1 file changed, 1 deletion(-)[m
[m
[33mcommit ce1367ec9144620d923f60c95e6425b04485e743[m[m
Author: heamkoppisetti <heam.koppisetti@tigeranalytics.com>[m
Date:   Wed Oct 11 20:51:45 2023 +0530[m
[m
    Direct commit the files[m
[m
 1.txt | 1 [32m+[m[m
 1 file changed, 1 insertion(+)[m
[m
[33mcommit 98b7bc1ac9ea11bef71142029839ad7d459a6abb[m[m
Author: heamkoppisetti <heam.koppisetti@tigeranalytics.com>[m
Date:   Wed Oct 11 20:48:59 2023 +0530[m
[m
    Initial Commit[m
[m
 CONTRIBUTING.md | 4 [32m++++[m[m
:[K[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git log --pretty=oneline
[?2004l[?1h=[33m7aa6112d6348fdc7ff3eb1b5dc102a794e66cd49[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m Renamed Successfully[m
[33m2280b2bc1b1f2e42fa29456d933221f30682105e[m commit[m
[33mce1367ec9144620d923f60c95e6425b04485e743[m Direct commit the files[m
[33m98b7bc1ac9ea11bef71142029839ad7d459a6abb[m Initial Commit[m
[33mb966d2393e0f40acb926cdeb28e1daa29800874d[m[33m ([m[1;31morigin/main[m[33m, [m[1;31morigin/HEAD[m[33m)[m Create README.md[m
[33mb119a29baca9bff823de4cdda9f6d8aadce86edf[m Merge pull request #1 from heamkoppisetti/abc[m
[33m4a82947059a1fd33e5d2e5a68cd527f2466c49a1[m[33m ([m[1;31morigin/abc[m[33m)[m first[m
[33m64d98ccf8c4ef7421885a9a46a636875b468873b[m first[m
[33m4668d25f5f32ef8e8fc6a7385ba9e93c54f2f420[m Done[m
[33m90af367b2748d71eb935f45f8f4fe2fb8af33ae8[m Gone[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git log --prety[Kty=format :"[1P:"[C[C%h - %an, %ar : $[K%s"
[?2004l[?1h=7aa6112 - heamkoppisetti, 2 minutes ago : Renamed Successfully[m
2280b2b - heamkoppisetti, 4 minutes ago : commit[m
ce1367e - heamkoppisetti, 31 minutes ago : Direct commit the files[m
98b7bc1 - heamkoppisetti, 34 minutes ago : Initial Commit[m
b966d23 - heamkoppisetti, in the future : Create README.md[m
b119a29 - heamkoppisetti, 3 hours ago : Merge pull request #1 from heamkoppisetti/abc[m
4a82947 - vyeshma.vanka, 5 hours ago : first[m
64d98cc - vyeshma.vanka, 5 hours ago : first[m
4668d25 - heamkoppisetti, 6 hours ago : Done[m
90af367 - heamkoppisetti, 7 hours ago : Gone[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git log --pretty=format:"%h - %an, %ar : %s" graph-graph-graph[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P
[?2004l[?1h=* 7aa6112 Renamed Successfully[m
* 2280b2b commit[m
* ce1367e Direct commit the files[m
* 98b7bc1 Initial Commit[m
* b966d23 Create README.md[m
*   b119a29 Merge pull request #1 from heamkoppisetti/abc[m
[32m|[m[33m\[m  [m
[32m|[m * 4a82947 first[m
[32m|[m * 64d98cc first[m
[32m|[m[32m/[m  [m
* 4668d25 Done[m
* 90af367 Gone[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git log --sinc [Ke=1.houe[Kr
[?2004l[?1h=[33mcommit 7aa6112d6348fdc7ff3eb1b5dc102a794e66cd49[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m[m
Author: heamkoppisetti <heam.koppisetti@tigeranalytics.com>[m
Date:   Wed Oct 11 21:21:00 2023 +0530[m
[m
    Renamed Successfully[m
[m
[33mcommit 2280b2bc1b1f2e42fa29456d933221f30682105e[m[m
Author: heamkoppisetti <heam.koppisetti@tigeranalytics.com>[m
Date:   Wed Oct 11 21:19:26 2023 +0530[m
[m
    commit[m
[m
[33mcommit ce1367ec9144620d923f60c95e6425b04485e743[m[m
Author: heamkoppisetti <heam.koppisetti@tigeranalytics.com>[m
Date:   Wed Oct 11 20:51:45 2023 +0530[m
[m
    Direct commit the files[m
[m
[33mcommit 98b7bc1ac9ea11bef71142029839ad7d459a6abb[m[m
Author: heamkoppisetti <heam.koppisetti@tigeranalytics.com>[m
Date:   Wed Oct 11 20:48:59 2023 +0530[m
[m
    Initial Commit[m
[m
[33mcommit b966d2393e0f40acb926cdeb28e1daa29800874d[m[33m ([m[1;31morigin/main[m[33m, [m[1;31morigin/HEAD[m[33m)[m[m
Author: heamkoppisetti <147583059+heamkoppisetti@users.noreply.github.com>[m
Date:   Wed Oct 11 22:05:00 2023 +0530[m
[m
    Create README.md[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ gti [K[K[Kit log -S "hea[K[K[KHeam"
[?2004l[?1h=[33mcommit ce1367ec9144620d923f60c95e6425b04485e743[m[m
Author: heamkoppisetti <heam.koppisetti@tigeranalytics.com>[m
Date:   Wed Oct 11 20:51:45 2023 +0530[m
[m
    Direct commit the files[m
[m
[33mcommit 98b7bc1ac9ea11bef71142029839ad7d459a6abb[m[m
Author: heamkoppisetti <heam.koppisetti@tigeranalytics.com>[m
Date:   Wed Oct 11 20:48:59 2023 +0530[m
[m
    Initial Commit[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ gti [K[K[Kit log --o[Kpretty --author='vyeshma'
[?2004l[?1h=[33mcommit 4a82947059a1fd33e5d2e5a68cd527f2466c49a1[m[33m ([m[1;31morigin/abc[m[33m)[m[m
Author: [1;31mvyeshma[m.vanka <[1;31mvyeshma[m.vanka@tigeranalytics.com>[m
Date:   Wed Oct 11 16:44:58 2023 +0530[m
[m
    first[m
[m
[33mcommit 64d98ccf8c4ef7421885a9a46a636875b468873b[m[m
Author: [1;31mvyeshma[m.vanka <[1;31mvyeshma[m.vanka@tigeranalytics.com>[m
Date:   Wed Oct 11 16:43:59 2023 +0530[m
[m
    first[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ nano 2.txt
[?2004l[?2004h[?1049h[22;0;0t[1;35r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[33;69H(B[0;7m[ New File ](B[m[H(B[0;7m  GNU nano 6.2                                                            2.txt                                                                     [1;147H(B[m[34d(B[0;7m^G(B[m Help[34;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[34;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[34;113H(B[0;7mM-A(B[m Set Mark    (B[0;7mM-](B[m To Bracket[35d(B[0;7m^X(B[m Exit[35;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[35;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^/(B[m Go To Line   (B[0;7mM-E(B[m Redo[35;113H(B[0;7mM-6(B[m Copy[35;129H(B[0;7m^Q(B[m Where Was[2d[?12l[?25h[?25l[1;81H(B[0;7m*[147G(B[m[?12l[?25h[2dT[?25l[?12l[?25hh[?25l[?12l[?25hi[?25l[?12l[?25hs[?25l[?12l[?25h [?25l[?12l[?25hi[?25l[?12l[?25hs[?25l[?12l[?25h [?25l[?12l[?25h2[?25l[?12l[?25h.[?25l[?12l[?25ht[?25l[?12l[?25hx[?25l[?12l[?25ht[?25l[?12l[?25h [?25l[?12l[?25hf[?25l[?12l[?25hi[?25l[?12l[?25hl[?25l[?12l[?25he[?25l[33;68H(B[0;7m[ Writing... ](B[m[1;81H(B[0;7m [147G(B[m[33;67H(B[0;7m[ Wrote 1 line ](B[m[?12l[?25h[2;19H[?25l[33d[J[35d[?12l[?25h[35;1H[?1049l[23;0;0t[?1l>[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git commit a-[K[K-a -m "2.txt is added"
[?2004lOn branch main
Your branch is ahead of 'origin/main' by 4 commits.
  (use "git push" to publish your local commits)

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	[31m2.txt[m

nothing added to commit but untracked files present (use "git add" to track)
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git add 2.txt
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git add 2.txtcommit -a -m "2.txt is added"
[?2004l[main 08852c1] 2.txt is added
 1 file changed, 1 insertion(+)
 create mode 100644 2.txt
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ nano 1.txt
[?2004l[?2004h[?1049h[22;0;0t[1;35r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[33;68H(B[0;7m[ Reading... ](B[m[33;67H(B[0;7m[ Read 3 lines ](B[m[H(B[0;7m  GNU nano 6.2                                                            1.txt                                                                     [1;147H(B[m[34d(B[0;7m^G(B[m Help[34;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[34;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[34;113H(B[0;7mM-A(B[m Set Mark    (B[0;7mM-](B[m To Bracket[35d(B[0;7m^X(B[m Exit[35;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[35;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^/(B[m Go To Line   (B[0;7mM-E(B[m Redo[35;113H(B[0;7mM-6(B[m Copy[35;129H(B[0;7m^Q(B[m Where Was[2dblah blah blah blah ahhhhhhhhhhhhhhhhhhhhhhhhh[3dheloooooooooo[4dfile created by Heam[2d[?12l[?25h[?25l[?12l[?25h[3d[?25l[?12l[?25h[4d[?25l[?12l[?25h[5d[?25l[1;81H(B[0;7m*[147G(B[m[?12l[?25h[5dt[?25l[?12l[?25hi[?25l[?12l[?25hm[?25l[?12l[?25he[?25l[?12l[?25h [?25l[?12l[?25hi[?25l[?12l[?25hs[?25l[?12l[?25h [?25l[?12l[?25hn[?25l[?12l[?25ho[?25l[?12l[?25ht[?25l[?12l[?25h [?25l[?12l[?25ha[?25l[?12l[?25hd[?25l[?12l[?25hd[?25l[?12l[?25hd[?25l[33d[K[?12l[?25h[5;16H [?25l[?12l[?25he[?25l[?12l[?25hd[?25l[?12l[?25h [?25l[?12l[?25hi[?25l[?12l[?25hn[?25l[?12l[?25h [?25l[?12l[?25ht[?25l[?12l[?25hh[?25l[?12l[?25he[?25l[?12l[?25h [?25l[?12l[?25hs[?25l[?12l[?25hi[?25l[?12l[?25ht[?25l[?12l[?25hu[?25l[?12l[?25ha[?25l[?12l[?25ht[?25l[?12l[?25hi[?25l[?12l[?25ho[?25l[?12l[?25hn[?25l[?12l[?25h [?25l[?12l[?25h [?25l[?12l[?25h [?25l[?12l[?25h [?25l[?12l[?25h [?25l[?12l[?25h [?25l[?12l[?25h [?25l[?12l[?25h [?25l[?12l[?25h [?25l[?12l[?25hf[?25l[?12l[?25hi[?25l[?12l[?25hl[?25l[?12l[?25he[?25l[33;68H(B[0;7m[ Writing... ](B[m[1;81H(B[0;7m [147G(B[m[33;66H(B[0;7m[ Wrote 4 lines ](B[m[?12l[?25h[5;30H[?25l[33d[J[35d[?12l[?25h[35;1H[?1049l[23;0;0t[?1l>[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ gti[K[Kit add 1.txt
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ gti [K[K[Kit commit -m "Changes are nae[K[K[Kmade"
[?2004l[main 61d40d1] Changes are made
 1 file changed, 1 insertion(+)
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ nano 2.txt
[?2004l[?2004h[?1049h[22;0;0t[1;35r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[33;68H(B[0;7m[ Reading... ](B[m[33;67H(B[0;7m[ Read 1 line ](B[m[H(B[0;7m  GNU nano 6.2                                                            2.txt                                                                     [1;147H(B[m[34d(B[0;7m^G(B[m Help[34;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[34;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[34;113H(B[0;7mM-A(B[m Set Mark    (B[0;7mM-](B[m To Bracket[35d(B[0;7m^X(B[m Exit[35;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[35;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^/(B[m Go To Line   (B[0;7mM-E(B[m Redo[35;113H(B[0;7mM-6(B[m Copy[35;129H(B[0;7m^Q(B[m Where Was[2dThis is 2.txt file[?12l[?25h[?25l[?12l[?25h[3d[?25l[1;81H(B[0;7m*[147G(B[m[?12l[?25h[3dt[?25l[?12l[?25hh[?25l[?12l[?25hi[?25l[?12l[?25hs[?25l[?12l[?25h [?25l[?12l[?25hi[?25l[?12l[?25h [?25l[?12l[?25hs[?25l[?12l[?25hj[?25l[?12l[?25ho[?25l[?12l[?25hu[?25l[?12l[?25hl[?25l[?12l[?25hd[?25l[?12l[?25h [?25l[?12l[?25h[?25l[?12l[?25h [?25l[?12l[?25h [?25l[?12l[?25h [?25l[33d[K[?12l[?25h[3;8H [?25l[?12l[?25hh[?25l[?12l[?25h [?25l[?12l[?25h [?25l[?12l[?25hh[?25l[?12l[?25ho[?25l[?12l[?25hu[?25l[?12l[?25hl[?25l[?12l[?25hd[?25l[?12l[?25h [?25l[?12l[?25hn[?25l[?12l[?25he[?25l[?12l[?25h [?25l[?12l[?25h[?25l[?12l[?25h [?25l[?12l[?25h [?25l[?12l[?25hb[?25l[?12l[?25he[?25l[?12l[?25h [?25l[?12l[?25hi[?25l[?12l[?25hn[?25l[?12l[?25hc[?25l[?12l[?25hl[?25l[?12l[?25hu[?25l[?12l[?25hd[?25l[?12l[?25he[?25l[?12l[?25hd[?25l[?12l[?25h [?25l[?12l[?25hi[?25l[?12l[?25hn[?25l[?12l[?25h [?25l[?12l[?25hc[?25l[?12l[?25hh[?25l[?12l[?25ha[?25l[?12l[?25hn[?25l[?12l[?25hg[?25l[?12l[?25he[?25l[?12l[?25hs[?25l[33;68H(B[0;7m[ Writing... ](B[m[1;81H(B[0;7m [147G(B[m[33;66H(B[0;7m[ Wrote 2 lines ](B[m[?12l[?25h[3;35H[?25l[33d[J[35d[?12l[?25h[35;1H[?1049l[23;0;0t[?1l>[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ gt[Kit add [K[K[K[K[K[K[K[Kgit add [K[K[K[Kcommit -a a[K--amed[Knd
[?2004lhint: Waiting for your editor to close the file... [?2004h[?1049h[22;0;0t[1;35r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[33;68H(B[0;7m[ Reading... ](B[m[33;66H(B[0;7m[ Read 15 lines ](B[m[H(B[0;7m  GNU nano 6.2                                   /home/heam/myproject/my_assignment/.git/COMMIT_EDITMSG                                             [1;147H(B[m[34d(B[0;7m^G(B[m Help[34;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[34;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[34;113H(B[0;7mM-A(B[m Set Mark    (B[0;7mM-](B[m To Bracket[35d(B[0;7m^X(B[m Exit[35;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[35;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^/(B[m Go To Line   (B[0;7mM-E(B[m Redo[35;113H(B[0;7mM-6(B[m Copy[35;129H(B[0;7m^Q(B[m Where Was[2dChanges are made[4d[36m# Please enter the commit message for your changes. Lines starting[5d# with '#' will be ignored, and an empty message aborts the commit.[6d#[7d# Date:      Wed Oct 11 21:31:07 2023 +0530[8d#[9d# On branch main[10d# Your branch is ahead of 'origin/main' by 6 commits.[11d#   (use "git push" to publish your local commits)[12d#[13d# Changes to be committed:[14d#[38;5;208m       [36mmodified:   1.txt[15d#[38;5;208m       [36mmodified:   2.txt[16d#[2d[39m(B[m[?12l[?25h[?25l[33;66H  (B[0;7m[ Writing... ](B[m[K[1;147H[33;66H(B[0;7m[ Wrote 15 lines ](B[m[?12l[?25h[2d[?25l[33d[J[35d[?12l[?25h[35;1H[?1049l[23;0;0t[?1l>[?2004l[K[main 92a6db1] Changes are made
 Date: Wed Oct 11 21:31:07 2023 +0530
 2 files changed, 2 insertions(+)
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git log -p -[K1
[?2004lfatal: ambiguous argument '1': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git log -p 1[C-1
[?2004l[?1h=[33mcommit 92a6db1e164c00f3c873b2c3ef74ee1a83bd4d5b[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m[m
Author: heamkoppisetti <heam.koppisetti@tigeranalytics.com>[m
Date:   Wed Oct 11 21:31:07 2023 +0530[m
[m
    Changes are made[m
[m
[1mdiff --git a/1.txt b/1.txt[m[m
[1mindex c77d956..0db1337 100644[m[m
[1m--- a/1.txt[m[m
[1m+++ b/1.txt[m[m
[36m@@ -1,3 +1,4 @@[m[m
 blah blah blah blah ahhhhhhhhhhhhhhhhhhhhhhhhh[m[m
 heloooooooooo[m[m
 file created by Heam[m[m
[32m+[m[32mtime is not added in the file[m[m
[1mdiff --git a/2.txt b/2.txt[m[m
[1mindex fdcb50c..1d8b540 100644[m[m
[1m--- a/2.txt[m[m
[1m+++ b/2.txt[m[m
[36m@@ -1 +1,2 @@[m[m
 This is 2.txt file[m[m
[32m+[m[32mthis should be included in changes[m[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ gti [K[K[Kir[Kt add *
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git status
[?2004lOn branch main
Your branch is ahead of 'origin/main' by 6 commits.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ nano 1.txt
[?2004l[?2004h[?1049h[22;0;0t[1;35r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[33;68H(B[0;7m[ Reading... ](B[m[33;67H(B[0;7m[ Read 4 lines ](B[m[H(B[0;7m  GNU nano 6.2                                                            1.txt                                                                     [1;147H(B[m[34d(B[0;7m^G(B[m Help[34;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[34;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[34;113H(B[0;7mM-A(B[m Set Mark    (B[0;7mM-](B[m To Bracket[35d(B[0;7m^X(B[m Exit[35;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[35;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^/(B[m Go To Line   (B[0;7mM-E(B[m Redo[35;113H(B[0;7mM-6(B[m Copy[35;129H(B[0;7m^Q(B[m Where Was[2dblah blah blah blah ahhhhhhhhhhhhhhhhhhhhhhhhh[3dheloooooooooo[4dfile created by Heam[5dtime is not added in the file[2d[?12l[?25h[?25l[?12l[?25h[3d[?25l[?12l[?25h[4d[?25l[?12l[?25h[5d[?25l[?12l[?25h[6d[?25l[?12l[?25h[?25l[1;81H(B[0;7m*[147G(B[m[?12l[?25h[6do[?25l[?12l[?25hk[?25l[?12l[?25h [?25l[?12l[?25ht[?25l[?12l[?25hh[?25l[?12l[?25hs[?25l[?12l[?25h [?25l[?12l[?25hi[?25l[?12l[?25h [?25l[?12l[?25hs[?25l[?12l[?25hi[?25l[?12l[?25hs[?25l[?12l[?25h [?25l[?12l[?25h[?25l[33d[K[?12l[?25h[6;10H [?25l[?12l[?25h [?25l[?12l[?25h [?25l[?12l[?25h[?25l[?12l[?25hs[?25l[?12l[?25h [?25l[?12l[?25hi[?25l[?12l[?25hs[?25l[?12l[?25h [?25l[?12l[?25hy[?25l[?12l[?25h [?25l[?12l[?25hy[?25l[?12l[?25he[?25l[?12l[?25h [?25l[?12l[?25h [?25l[?12l[?25ht[?25l[?12l[?25he[?25l[?12l[?25hx[?25l[?12l[?25h [?25l[?12l[?25hs[?25l[?12l[?25ht[?25l[?12l[?25hu[?25l[?12l[?25hn[?25l[?12l[?25hg[?25l[?12l[?25h [?25l[?12l[?25h [?25l[?12l[?25h [?25l[?12l[?25hi[?25l[?12l[?25hn[?25l[?12l[?25hg[?25l[33;68H(B[0;7m[ Writing... ](B[m[1;81H(B[0;7m [147G(B[m[33;66H(B[0;7m[ Wrote 5 lines ](B[m[?12l[?25h[6;19H[?25l[33d[J[35d[?12l[?25h[35;1H[?1049l[23;0;0t[?1l>[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ nano 2.[K,[K.txt
[?2004l[?2004h[?1049h[22;0;0t[1;35r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[33;68H(B[0;7m[ Reading... ](B[m[33;67H(B[0;7m[ Read 2 lines ](B[m[H(B[0;7m  GNU nano 6.2                                                            2.txt                                                                     [1;147H(B[m[34d(B[0;7m^G(B[m Help[34;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[34;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[34;113H(B[0;7mM-A(B[m Set Mark    (B[0;7mM-](B[m To Bracket[35d(B[0;7m^X(B[m Exit[35;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[35;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^/(B[m Go To Line   (B[0;7mM-E(B[m Redo[35;113H(B[0;7mM-6(B[m Copy[35;129H(B[0;7m^Q(B[m Where Was[2dThis is 2.txt file[3dthis should be included in changes[A[?12l[?25h[?25l[?12l[?25h[3d[?25l[?12l[?25h[4d[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;81H(B[0;7m*[147G(B[m[?12l[?25h[4dt[?25l[?12l[?25hh[?25l[?12l[?25hi[?25l[?12l[?25h [?25l[?12l[?25h[?25l[?12l[?25hs[?25l[?12l[?25h [?25l[?12l[?25hi[?25l[?12l[?25hs[?25l[?12l[?25h [?25l[?12l[?25ha[?25l[?12l[?25hl[?25l[?12l[?25hs[?25l[?12l[?25ho[?25l[?12l[?25h [?25l[33d[K[?12l[?25h[4;14Ht[?25l[?12l[?25he[?25l[?12l[?25hs[?25l[?12l[?25ht[?25l[?12l[?25hi[?25l[?12l[?25hn[?25l[?12l[?25hg[?25l[33;68H(B[0;7m[ Writing... ](B[m[1;81H(B[0;7m [147G(B[m[33;66H(B[0;7m[ Wrote 3 lines ](B[m[?12l[?25h[4;21H[?25l[33d[J[35d[?12l[?25h[35;1H[?1049l[23;0;0t[?1l>[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git add *
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ gti [K[K[Kit status
[?2004lOn branch main
Your branch is ahead of 'origin/main' by 6 commits.
  (use "git push" to publish your local commits)

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mmodified:   1.txt[m
	[32mmodified:   2.txt[m

[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ gti [K[K[Kir [K[Kt reset HEAD 2.txt
[?2004lUnstaged changes after reset:
M	2.txt
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git status
[?2004lOn branch main
Your branch is ahead of 'origin/main' by 6 commits.
  (use "git push" to publish your local commits)

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mmodified:   1.txt[m

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	[31mmodified:   2.txt[m

[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ gti [K[K[Kit checkout -- 2.txt
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git status
[?2004lOn branch main
Your branch is ahead of 'origin/main' by 6 commits.
  (use "git push" to publish your local commits)

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mmodified:   1.txt[m

[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ nano 2.txt
[?2004l[?2004h[?1049h[22;0;0t[1;35r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[33;68H(B[0;7m[ Reading... ](B[m[33;67H(B[0;7m[ Read 2 lines ](B[m[H(B[0;7m  GNU nano 6.2                                                            2.txt                                                                     [1;147H(B[m[34d(B[0;7m^G(B[m Help[34;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[34;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[34;113H(B[0;7mM-A(B[m Set Mark    (B[0;7mM-](B[m To Bracket[35d(B[0;7m^X(B[m Exit[35;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[35;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^/(B[m Go To Line   (B[0;7mM-E(B[m Redo[35;113H(B[0;7mM-6(B[m Copy[35;129H(B[0;7m^Q(B[m Where Was[2dThis is 2.txt file[3dthis should be included in changes[A[?12l[?25h[?25l[?12l[?25h[3d[?25l[?12l[?25h[4d[?25l[1;81H(B[0;7m*[147G(B[m[?12l[?25h[4dt[?25l[?12l[?25hh[?25l[?12l[?25hi[?25l[?12l[?25hs[?25l[?12l[?25h [?25l[?12l[?25hi[?25l[?12l[?25hs[?25l[?12l[?25h [?25l[?12l[?25hi[?25l[?12l[?25hn[?25l[?12l[?25hc[?25l[?12l[?25hl[?25l[?12l[?25hu[?25l[?12l[?25hd[?25l[?12l[?25he[?25l[?12l[?25hd[?25l[?12l[?25h [?25l[33d[K[?12l[?25h[4;18Ha[?25l[?12l[?25hg[?25l[?12l[?25ha[?25l[?12l[?25hi[?25l[?12l[?25hn[?25l[33;68H(B[0;7m[ Writing... ](B[m[1;81H(B[0;7m [147G(B[m[33;66H(B[0;7m[ Wrote 3 lines ](B[m[?12l[?25h[4;23H[?25l[33d[J[35d[?12l[?25h[35;1H[?1049l[23;0;0t[?1l>[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ nano 2.txt[Kgit add *
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git status
[?2004lOn branch main
Your branch is ahead of 'origin/main' by 6 commits.
  (use "git push" to publish your local commits)

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mmodified:   1.txt[m
	[32mmodified:   2.txt[m

[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git restore -- [Kstaged 1.txt
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git status
[?2004lOn branch main
Your branch is ahead of 'origin/main' by 6 commits.
  (use "git push" to publish your local commits)

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mmodified:   2.txt[m

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	[31mmodified:   1.txt[m

[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git resti[Kore 1.txt
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git restore 1.txt[7Pstatus
[?2004lOn branch main
Your branch is ahead of 'origin/main' by 6 commits.
  (use "git push" to publish your local commits)

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mmodified:   2.txt[m

[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git comi[Kmit -m "Final changes"
[?2004l[main 5114347] Final changes
 1 file changed, 1 insertion(+)
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git remote
[?2004lorigin
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git remote -v
[?2004lorigin	https://github.com/heamkoppisetti/Assignment.git (fetch)
origin	https://github.com/heamkoppisetti/Assignment.git (push)
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git remote add vy [7mhttps://github.com/Vyeshmavanka77/Assignment_1.1.git[27mhttps://github.com/Vyeshmavanka77/Assignment_1.1.git
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ gt [K[Kit remote -v
[?2004lorigin	https://github.com/heamkoppisetti/Assignment.git (fetch)
origin	https://github.com/heamkoppisetti/Assignment.git (push)
vy	https://github.com/Vyeshmavanka77/Assignment_1.1.git (fetch)
vy	https://github.com/Vyeshmavanka77/Assignment_1.1.git (push)
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ gt[Kit fetch vy
[?2004lremote: Enumerating objects: 9, done.[K
remote: Counting objects:  11% (1/9)[Kremote: Counting objects:  22% (2/9)[Kremote: Counting objects:  33% (3/9)[Kremote: Counting objects:  44% (4/9)[Kremote: Counting objects:  55% (5/9)[Kremote: Counting objects:  66% (6/9)[Kremote: Counting objects:  77% (7/9)[Kremote: Counting objects:  88% (8/9)[Kremote: Counting objects: 100% (9/9)[Kremote: Counting objects: 100% (9/9), done.[K
remote: Compressing objects:  25% (1/4)[Kremote: Compressing objects:  50% (2/4)[Kremote: Compressing objects:  75% (3/4)[Kremote: Compressing objects: 100% (4/4)[Kremote: Compressing objects: 100% (4/4), done.[K
remote: Total 9 (delta 0), reused 6 (delta 0), pack-reused 0[K
Unpacking objects:  11% (1/9)Unpacking objects:  22% (2/9)Unpacking objects:  33% (3/9)Unpacking objects:  44% (4/9)Unpacking objects:  55% (5/9)Unpacking objects:  66% (6/9)Unpacking objects:  77% (7/9)Unpacking objects:  88% (8/9)Unpacking objects: 100% (9/9)Unpacking objects: 100% (9/9), 1.10 KiB | 374.00 KiB/s, done.
From https://github.com/Vyeshmavanka77/Assignment_1.1
 * [new branch]      1.1        -> vy/1.1
 * [new branch]      main       -> vy/main
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git branch
[?2004l[?1h=* [32mmain[m[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git push vy main
[?2004lUsername for 'https://github.com': vyesh     Vyeshmavanka77
Password for 'https://Vyeshmavanka77@github.com': 
remote: Support for password authentication was removed on August 13, 2021.
remote: Please see https://docs.github.com/en/get-started/getting-started-with-git/about-remote-repositories#cloning-with-https-urls for information on currently recommended modes of authentication.
fatal: Authentication failed for 'https://github.com/Vyeshmavanka77/Assignment_1.1.git/'
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git remote show origin
[?2004l* remote origin
  Fetch URL: https://github.com/heamkoppisetti/Assignment.git
  Push  URL: https://github.com/heamkoppisetti/Assignment.git
  HEAD branch: main
  Remote branches:
    abc  tracked
    main tracked
  Local branch configured for 'git pull':
    main merges with remote main
  Local ref configured for 'git push':
    main pushes to main (fast-forwardable)
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git remote shoe[Kw 1.1
[?2004lfatal: '1.1' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git remote show 1.1[K[K[Kvy
[?2004l* remote vy
  Fetch URL: https://github.com/Vyeshmavanka77/Assignment_1.1.git
  Push  URL: https://github.com/Vyeshmavanka77/Assignment_1.1.git
  HEAD branch: main
  Remote branches:
    1.1  tracked
    main tracked
  Local ref configured for 'git push':
    main pushes to main (local out of date)
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git remote rename vy vyeshma
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git remote
[?2004lorigin
vyeshma
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git remte [K[K[Kote remove vyeshma
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git remote remove vyeshma[K
[?2004lorigin
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git tag
[?2004l[?1h=[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git tag -a v1 -m "First Tag"
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git tag
[?2004l[?1h=v1[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git show v1
[?2004l[?1h=[33mtag v1[m[m
Tagger: heamkoppisetti <heam.koppisetti@tigeranalytics.com>[m
Date:   Wed Oct 11 21:48:25 2023 +0530[m
[m
First Tag[m
[m
[33mcommit 51143471131f68075409752742a24a5258c3f1e5[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m, [m[1;33mtag: v1[m[33m)[m[m
Author: heamkoppisetti <heam.koppisetti@tigeranalytics.com>[m
Date:   Wed Oct 11 21:37:20 2023 +0530[m
[m
    Final changes[m
[m
[1mdiff --git a/2.txt b/2.txt[m[m
[1mindex 1d8b540..168b7e0 100644[m[m
[1m--- a/2.txt[m[m
[1m+++ b/2.txt[m[m
[36m@@ -1,2 +1,3 @@[m[m
 This is 2.txt file[m[m
 this should be included in changes[m[m
[32m+[m[32mthis is included again[m[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git tag v1-lw[K[K[K[K2
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git tag v2show v1[4Ptag
[?2004l[?1h=v1[m
v2[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ gti [K[K[Ki t[K[Kt shwo[K[Kow v2
[?2004l[?1h=[33mcommit 51143471131f68075409752742a24a5258c3f1e5[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m, [m[1;33mtag: v2[m[33m, [m[1;33mtag: v1[m[33m)[m[m
Author: heamkoppisetti <heam.koppisetti@tigeranalytics.com>[m
Date:   Wed Oct 11 21:37:20 2023 +0530[m
[m
    Final changes[m
[m
[1mdiff --git a/2.txt b/2.txt[m[m
[1mindex 1d8b540..168b7e0 100644[m[m
[1m--- a/2.txt[m[m
[1m+++ b/2.txt[m[m
[36m@@ -1,2 +1,3 @@[m[m
 This is 2.txt file[m[m
 this should be included in changes[m[m
[32m+[m[32mthis is included again[m[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git log ==[K[K--pretty=oneline
[?2004l[?1h=[33m51143471131f68075409752742a24a5258c3f1e5[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m, [m[1;33mtag: v2[m[33m, [m[1;33mtag: v1[m[33m)[m Final changes[m
[33m92a6db1e164c00f3c873b2c3ef74ee1a83bd4d5b[m Changes are made[m
[33m08852c1d815ba56481d262e3c14ecae854ac71e7[m 2.txt is added[m
[33m7aa6112d6348fdc7ff3eb1b5dc102a794e66cd49[m Renamed Successfully[m
[33m2280b2bc1b1f2e42fa29456d933221f30682105e[m commit[m
[33mce1367ec9144620d923f60c95e6425b04485e743[m Direct commit the files[m
[33m98b7bc1ac9ea11bef71142029839ad7d459a6abb[m Initial Commit[m
[33mb966d2393e0f40acb926cdeb28e1daa29800874d[m[33m ([m[1;31morigin/main[m[33m, [m[1;31morigin/HEAD[m[33m)[m Create README.md[m
[33mb119a29baca9bff823de4cdda9f6d8aadce86edf[m Merge pull request #1 from heamkoppisetti/abc[m
[33m4a82947059a1fd33e5d2e5a68cd527f2466c49a1[m[33m ([m[1;31morigin/abc[m[33m)[m first[m
[33m64d98ccf8c4ef7421885a9a46a636875b468873b[m first[m
[33m4668d25f5f32ef8e8fc6a7385ba9e93c54f2f420[m Done[m
[33m90af367b2748d71eb935f45f8f4fe2fb8af33ae8[m Gone[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git ta [Kg -a v3 7aa6112
[?2004lhint: Waiting for your editor to close the file... [?2004h[?1049h[22;0;0t[1;35r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[33;68H(B[0;7m[ Reading... ](B[m[33;67H(B[0;7m[ Read 5 lines ](B[m[H(B[0;7m  GNU nano 6.2                                     /home/heam/myproject/my_assignment/.git/TAG_EDITMSG                                              [1;147H(B[m[34d(B[0;7m^G(B[m Help[34;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[34;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[34;113H(B[0;7mM-A(B[m Set Mark    (B[0;7mM-](B[m To Bracket[35d(B[0;7m^X(B[m Exit[35;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[35;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^/(B[m Go To Line   (B[0;7mM-E(B[m Redo[35;113H(B[0;7mM-6(B[m Copy[35;129H(B[0;7m^Q(B[m Where Was[3d[36m#[4d# Write a message for tag:[5d#   v3[6d# Lines starting with '#' will be ignored.[2d[39m(B[m[?12l[?25h[?25l[1;104H(B[0;7m*[147G(B[m[?12l[?25h[2dT[?25l[?12l[?25hh[?25l[?12l[?25hi[?25l[?12l[?25hs[?25l[?12l[?25h [?25l[?12l[?25hi[?25l[?12l[?25hs[?25l[?12l[?25h [?25l[?12l[?25ht[?25l[?12l[?25hh[?25l[?12l[?25hr[?25l[?12l[?25hd[?25l[?12l[?25h [?25l[?12l[?25h[?25l[?12l[?25h [?25l[?12l[?25h [?25l[?12l[?25hi[?25l[?12l[?25hr[?25l[?12l[?25hd[?25l[33d[K[?12l[?25h[2;15H[?25l[?12l[?25ht[?25l[?12l[?25ha[?25l[?12l[?25hg[?25l[33;68H(B[0;7m[ Writing... ](B[m[1;104H(B[0;7m [147G(B[m[33;66H(B[0;7m[ Wrote 5 lines ](B[m[?12l[?25h[2;18H[?25l[33d[J[35d[?12l[?25h[35;1H[?1049l[23;0;0t[?1l>[?2004l[K[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git tag
[?2004l[?1h=v1[m
v2[m
v3[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ f[Kgit sho [Kw v3
[?2004l[?1h=[33mtag v3[m[m
Tagger: heamkoppisetti <heam.koppisetti@tigeranalytics.com>[m
Date:   Wed Oct 11 21:50:24 2023 +0530[m
[m
This is third tag[m
[m
[33mcommit 7aa6112d6348fdc7ff3eb1b5dc102a794e66cd49[m[33m ([m[1;33mtag: v3[m[33m)[m[m
Author: heamkoppisetti <heam.koppisetti@tigeranalytics.com>[m
Date:   Wed Oct 11 21:21:00 2023 +0530[m
[m
    Renamed Successfully[m
[m
[1mdiff --git a/CONTRIBUTING.md b/README.md[m[m
[1msimilarity index 100%[m[m
[1mrename from CONTRIBUTING.md[m[m
[1mrename to README.md[m[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git push origin v3
[?2004lUsername for 'https://github.com': heamkoppisetti
Password for 'https://heamkoppisetti@github.com': 
remote: Support for password authentication was removed on August 13, 2021.
remote: Please see https://docs.github.com/en/get-started/getting-started-with-git/about-remote-repositories#cloning-with-https-urls for information on currently recommended modes of authentication.
fatal: Authentication failed for 'https://github.com/heamkoppisetti/Assignment.git/'
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git push origin v3[K[K[K --tags
[?2004lUsername for 'https://github.com': heamkoppisetti
Password for 'https://heamkoppisetti@github.com': 
remote: Support for password authentication was removed on August 13, 2021.
remote: Please see https://docs.github.com/en/get-started/getting-started-with-git/about-remote-repositories#cloning-with-https-urls for information on currently recommended modes of authentication.
fatal: Authentication failed for 'https://github.com/heamkoppisetti/Assignment.git/'
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git tag -d v1[K2
[?2004lDeleted tag 'v2' (was 5114347)
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ gti [K[K[Kit push origin --delete v1
[?2004lUsername for 'https://github.com': vyeshmavanka  77^[[D^[[D^[[D^[[D^[[D^[[D^[[D                                          Vyeshmavanka77
Password for 'https://Vyeshmavanka77@github.com': 
remote: Support for password authentication was removed on August 13, 2021.
remote: Please see https://docs.github.com/en/get-started/getting-started-with-git/about-remote-repositories#cloning-with-https-urls for information on currently recommended modes of authentication.
fatal: Authentication failed for 'https://github.com/heamkoppisetti/Assignment.git/'
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ gti [K[K[Kit checkout v2
[?2004lerror: pathspec 'v2' did not match any file(s) known to git
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git checkout v2[K3
[?2004lNote: switching to 'v3'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 7aa6112 Renamed Successfully
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git chrc[K[Kecj[Kkout -b version [K2 v3[K2
[?2004lfatal: 'v2' is not a commit and a branch 'version2' cannot be created from it
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git checkout -b version2 v2[K3
[?2004lSwitched to a new branch 'version2'
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ gti [K[K[Kir config --global alias.last 'log -1 HEAD'
[?2004lCommand 'gir' not found, did you mean:
  command 'git' from deb git (1:2.34.1-1ubuntu1.9)
  command 'gid' from deb id-utils (4.6.28-20200521ss15dab)
  command 'gie' from deb proj-bin (8.2.1-1)
  command 'gip' from deb gip (1.7.0-1-5)
  command 'dir' from deb coreutils (8.32-4.1ubuntu1)
  command 'gio' from deb libglib2.0-bin (2.72.4-0ubuntu2)
  command 'gpr' from deb gpr (0.15deb-2build1)
  command 'xir' from deb libxir-utils (1.4-2ubuntu1)
Try: sudo apt install <deb name>
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ gir config --global alias.last 'log -1 HEAD'[1P[1@t
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ gti [K[K[Kit last
[?2004l[?1h=[33mcommit 7aa6112d6348fdc7ff3eb1b5dc102a794e66cd49[m[33m ([m[1;36mHEAD -> [m[1;32mversion2[m[33m, [m[1;33mtag: v3[m[33m)[m[m
Author: heamkoppisetti <heam.koppisetti@tigeranalytics.com>[m
Date:   Wed Oct 11 21:21:00 2023 +0530[m
[m
    Renamed Successfully[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git log -1 HEAD
[?2004l[?1h=[33mcommit 7aa6112d6348fdc7ff3eb1b5dc102a794e66cd49[m[33m ([m[1;36mHEAD -> [m[1;32mversion2[m[33m, [m[1;33mtag: v3[m[33m)[m[m
Author: heamkoppisetti <heam.koppisetti@tigeranalytics.com>[m
Date:   Wed Oct 11 21:21:00 2023 +0530[m
[m
    Renamed Successfully[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ ls
[?2004l1.txt  README  README.md  first.txt  s.txt
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ nano README
[?2004l[?2004h[?1049h[22;0;0t[1;35r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[33;68H(B[0;7m[ Reading... ](B[m[33;67H(B[0;7m[ Read 1 line ](B[m[H(B[0;7m  GNU nano 6.2                                                           README                                                                     [1;147H(B[m[34d(B[0;7m^G(B[m Help[34;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[34;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[34;113H(B[0;7mM-A(B[m Set Mark    (B[0;7mM-](B[m To Bracket[35d(B[0;7m^X(B[m Exit[35;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[35;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^/(B[m Go To Line   (B[0;7mM-E(B[m Redo[35;113H(B[0;7mM-6(B[m Copy[35;129H(B[0;7m^Q(B[m Where Was[2dMY PROJECT[?12l[?25h[?25l[?12l[?25h[3d[?25l[?12l[?25h[?25l[1;81H(B[0;7m*[147G(B[m[?12l[?25h[3dM[?25l[?12l[?25hy[?25l[?12l[?25h [?25l[?12l[?25hY[?25l[?12l[?25h [?25l[?12l[?25hF[?25l[?12l[?25hi[?25l[?12l[?25hl[?25l[?12l[?25he[?25l[?12l[?25hs[?25l[?12l[?25h [?25l[?12l[?25h [?25l[?12l[?25h [?25l[?12l[?25h [?25l[?12l[?25hI[?25l[?12l[?25hL[?25l[?12l[?25hE[?25l[33d[K[?12l[?25h[3;8HS[?25l[33;68H(B[0;7m[ Writing... ](B[m[1;81H(B[0;7m [147G(B[m[33;66H(B[0;7m[ Wrote 2 lines ](B[m[?12l[?25h[3;9H[?25l[33d[J[35d[?12l[?25h[35;1H[?1049l[23;0;0t[?1l>[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ nano 2[K1[Kfirst.txt
[?2004l[?2004h[?1049h[22;0;0t[1;35r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[33;68H(B[0;7m[ Reading... ](B[m[33;67H(B[0;7m[ Read 1 line ](B[m[H(B[0;7m  GNU nano 6.2                                                          first.txt                                                                   [1;147H(B[m[34d(B[0;7m^G(B[m Help[34;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[34;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[34;113H(B[0;7mM-A(B[m Set Mark    (B[0;7mM-](B[m To Bracket[35d(B[0;7m^X(B[m Exit[35;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[35;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^/(B[m Go To Line   (B[0;7mM-E(B[m Redo[35;113H(B[0;7mM-6(B[m Copy[35;129H(B[0;7m^Q(B[m Where Was[2dhii[?12l[?25h[?25l[?12l[?25h[3d[?25l[1;83H(B[0;7m*[147G(B[m[?12l[?25h[3dh[?25l[?12l[?25he[?25l[?12l[?25hl[?25l[?12l[?25hl[?25l[?12l[?25ho[?25l[33;67H (B[0;7m[ Writing... ](B[m[1;83H(B[0;7m [147G(B[m[33;66H(B[0;7m[ Wrote 2 lines ](B[m[?12l[?25h[3;6H[?25l[33d[J[35d[?12l[?25h[35;1H[?1049l[23;0;0t[?1l>[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ nano s.txt
[?2004l[?2004h[?1049h[22;0;0t[1;35r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[33;68H(B[0;7m[ Reading... ](B[m[33;67H(B[0;7m[ Read 1 line ](B[m[H(B[0;7m  GNU nano 6.2                                                            s.txt                                                                     [1;147H(B[m[34d(B[0;7m^G(B[m Help[34;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[34;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[34;113H(B[0;7mM-A(B[m Set Mark    (B[0;7mM-](B[m To Bracket[35d(B[0;7m^X(B[m Exit[35;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[35;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^/(B[m Go To Line   (B[0;7mM-E(B[m Redo[35;113H(B[0;7mM-6(B[m Copy[35;129H(B[0;7m^Q(B[m Where Was[2dhii[?12l[?25h[?25l[?12l[?25h[3d[?25l[1;81H(B[0;7m*[147G(B[m[?12l[?25h[3dh[?25l[?12l[?25ho[?25l[?12l[?25h;[?25l[?12l[?25ha[?25l[?12l[?25h [?25l[?12l[?25h [?25l[?12l[?25hl[?25l[?12l[?25ha[?25l[33;67H (B[0;7m[ Writing... ](B[m[1;81H(B[0;7m [147G(B[m[33;66H(B[0;7m[ Wrote 2 lines ](B[m[?12l[?25h[3;5H[?25l[33d[J[35d[?12l[?25h[35;1H[?1049l[23;0;0t[?1l>[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git add README firsr[Kt.txt s.txt
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git commit -m "Combined commit"
[?2004l[version2 6544513] Combined commit
 3 files changed, 3 insertions(+)
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git status
[?2004lOn branch version2
nothing to commit, working tree clean
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ gt[Kit branch testing
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git log --oneline --decorate
[?2004l[?1h=[33m6544513[m[33m ([m[1;36mHEAD -> [m[1;32mversion2[m[33m, [m[1;32mtesting[m[33m)[m Combined commit[m
[33m7aa6112[m[33m ([m[1;33mtag: v3[m[33m)[m Renamed Successfully[m
[33m2280b2b[m commit[m
[33mce1367e[m Direct commit the files[m
[33m98b7bc1[m Initial Commit[m
[33mb966d23[m[33m ([m[1;31morigin/main[m[33m, [m[1;31morigin/HEAD[m[33m)[m Create README.md[m
[33mb119a29[m Merge pull request #1 from heamkoppisetti/abc[m
[33m4a82947[m[33m ([m[1;31morigin/abc[m[33m)[m first[m
[33m64d98cc[m first[m
[33m4668d25[m Done[m
[33m90af367[m Gone[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git checkout testing
[?2004lSwitched to branch 'testing'
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ non[K[Kano 1.txt[K[K[K[K[Kfirst.txt
[?2004l[?2004h[?1049h[22;0;0t[1;35r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[33;68H(B[0;7m[ Reading... ](B[m[33;67H(B[0;7m[ Read 2 lines ](B[m[H(B[0;7m  GNU nano 6.2                                                          first.txt                                                                   [1;147H(B[m[34d(B[0;7m^G(B[m Help[34;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[34;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[34;113H(B[0;7mM-A(B[m Set Mark    (B[0;7mM-](B[m To Bracket[35d(B[0;7m^X(B[m Exit[35;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[35;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^/(B[m Go To Line   (B[0;7mM-E(B[m Redo[35;113H(B[0;7mM-6(B[m Copy[35;129H(B[0;7m^Q(B[m Where Was[2dhii[3dhello[A[?12l[?25h[?25l[?12l[?25h[3d[?25l[?12l[?25h[4d[?25l[?12l[?25h[?25l[1;83H(B[0;7m*[147G(B[m[?12l[?25h[4di[?25l[?12l[?25ht[?25l[?12l[?25h'[?25l[?12l[?25hs[?25l[?12l[?25h [?25l[?12l[?25hm[?25l[?12l[?25he[?25l[5d[?12l[?25h[?25l[33;67H (B[0;7m[ Writing... ](B[m[K[1;83H(B[0;7m [147G(B[m[33;66H(B[0;7m[ Wrote 4 lines ](B[m[?12l[?25h[5d[?25l[33d[J[35d[?12l[?25h[35;1H[?1049l[23;0;0t[?1l>[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git commit -m "Changes [K[Kd the fr[Kile"
[?2004lOn branch testing
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	[31mmodified:   first.txt[m

no changes added to commit (use "git add" and/or "git commit -a")
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git commit -m "Changed the file"[C[1@-[1@a[1@ 
[?2004l[testing faabfd9] Changed the file
 1 file changed, 2 insertions(+)
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git checkout master
[?2004lerror: pathspec 'master' did not match any file(s) known to git
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git checkout master[K[K[K[K[K[Korigin
[?2004lNote: switching to 'origin'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at b966d23 Create README.md
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git be[Kranch
[?2004l[?1h=* [32m(HEAD detached at origin/main)[m[m
  main[m[m
  testing[m[m
  version2[m[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git log --oneline --decorate --graph --all
[?2004l[?1h=* [33mfaabfd9[m[33m ([m[1;32mtesting[m[33m)[m Changed the file[m
* [33m6544513[m[33m ([m[1;32mversion2[m[33m)[m Combined commit[m
[31m|[m * [33m5114347[m[33m ([m[1;33mtag: v1[m[33m, [m[1;32mmain[m[33m)[m Final changes[m
[31m|[m * [33m92a6db1[m Changes are made[m
[31m|[m * [33m08852c1[m 2.txt is added[m
[31m|[m[31m/[m  [m
* [33m7aa6112[m[33m ([m[1;33mtag: v3[m[33m)[m Renamed Successfully[m
* [33m2280b2b[m commit[m
* [33mce1367e[m Direct commit the files[m
* [33m98b7bc1[m Initial Commit[m
* [33mb966d23[m[33m ([m[1;36mHEAD[m[33m, [m[1;31morigin/main[m[33m, [m[1;31morigin/HEAD[m[33m)[m Create README.md[m
*   [33mb119a29[m Merge pull request #1 from heamkoppisetti/abc[m
[33m|[m[34m\[m  [m
[33m|[m * [33m4a82947[m[33m ([m[1;31morigin/abc[m[33m)[m first[m
[33m|[m * [33m64d98cc[m first[m
[33m|[m[33m/[m  [m
* [33m4668d25[m Done[m
* [33m90af367[m Gone[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git chechout [K[K[K[K[Kkout [K[K[K[K[K[K[K[K[Kmerge testing
[?2004lUpdating b966d23..faabfd9
Fast-forward
 1.txt     | 1 [32m+[m
 README    | 2 [32m++[m
 README.md | 5 [32m++++[m[31m-[m
 first.txt | 3 [32m+++[m
 s.txt     | 1 [32m+[m
 5 files changed, 11 insertions(+), 1 deletion(-)
 create mode 100644 README
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ ls
[?2004l1.txt  README  README.md  first.txt  s.txt
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git push -u origin main
[?2004lUsername for 'https://github.com': heamkoppisetti
Password for 'https://heamkoppisetti@github.com': 
remote: Support for password authentication was removed on August 13, 2021.
remote: Please see https://docs.github.com/en/get-started/getting-started-with-git/about-remote-repositories#cloning-with-https-urls for information on currently recommended modes of authentication.
fatal: Authentication failed for 'https://github.com/heamkoppisetti/Assignment.git/'
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ gti [K[K[Kit ber[K[Kranch
[?2004l[?1h=* [32m(HEAD detached from origin/main)[m[m
  main[m[m
  testing[m[m
  version2[m[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git switxh[K[Kch -c testing
[?2004lfatal: A branch named 'testing' already exists.
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git switch -c testing[11Pbranchpush -u origin main[K[K[K[Ktesting
[?2004lUsername for 'https://github.com': heamkoppisetti
Password for 'https://heamkoppisetti@github.com': 
remote: Support for password authentication was removed on August 13, 2021.
remote: Please see https://docs.github.com/en/get-started/getting-started-with-git/about-remote-repositories#cloning-with-https-urls for information on currently recommended modes of authentication.
fatal: Authentication failed for 'https://github.com/heamkoppisetti/Assignment.git/'
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git push -u origin testing
[?2004lUsername for 'https://github.com': heamkoppisetti
Password for 'https://heamkoppisetti@github.com': 
Enumerating objects: 24, done.
Counting objects:   4% (1/23)Counting objects:   8% (2/23)Counting objects:  13% (3/23)Counting objects:  17% (4/23)Counting objects:  21% (5/23)Counting objects:  26% (6/23)Counting objects:  30% (7/23)Counting objects:  34% (8/23)Counting objects:  39% (9/23)Counting objects:  43% (10/23)Counting objects:  47% (11/23)Counting objects:  52% (12/23)Counting objects:  56% (13/23)Counting objects:  60% (14/23)Counting objects:  65% (15/23)Counting objects:  69% (16/23)Counting objects:  73% (17/23)Counting objects:  78% (18/23)Counting objects:  82% (19/23)Counting objects:  86% (20/23)Counting objects:  91% (21/23)Counting objects:  95% (22/23)Counting objects: 100% (23/23)Counting objects: 100% (23/23), done.
Delta compression using up to 8 threads
Compressing objects:   7% (1/14)Compressing objects:  14% (2/14)Compressing objects:  21% (3/14)Compressing objects:  28% (4/14)Compressing objects:  35% (5/14)Compressing objects:  42% (6/14)Compressing objects:  50% (7/14)Compressing objects:  57% (8/14)Compressing objects:  64% (9/14)Compressing objects:  71% (10/14)Compressing objects:  78% (11/14)Compressing objects:  85% (12/14)Compressing objects:  92% (13/14)Compressing objects: 100% (14/14)Compressing objects: 100% (14/14), done.
Writing objects:   5% (1/19)Writing objects:  10% (2/19)Writing objects:  15% (3/19)Writing objects:  21% (4/19)Writing objects:  26% (5/19)Writing objects:  31% (6/19)Writing objects:  36% (7/19)Writing objects:  42% (8/19)Writing objects:  52% (10/19)Writing objects:  57% (11/19)Writing objects:  63% (12/19)Writing objects:  68% (13/19)Writing objects:  73% (14/19)Writing objects:  78% (15/19)Writing objects:  84% (16/19)Writing objects:  89% (17/19)Writing objects:  94% (18/19)Writing objects: 100% (19/19)Writing objects: 100% (19/19), 1.76 KiB | 900.00 KiB/s, done.
Total 19 (delta 4), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas:   0% (0/4)[Kremote: Resolving deltas:  25% (1/4)[Kremote: Resolving deltas:  50% (2/4)[Kremote: Resolving deltas:  75% (3/4)[Kremote: Resolving deltas: 100% (4/4)[Kremote: Resolving deltas: 100% (4/4), done.[K
remote: 
remote: Create a pull request for 'testing' on GitHub by visiting:[K
remote:      https://github.com/heamkoppisetti/Assignment/pull/new/testing[K
remote: 
To https://github.com/heamkoppisetti/Assignment.git
 * [new branch]      testing -> testing
Branch 'testing' set up to track remote branch 'testing' from 'origin'.
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ gti [K[K[Kit remote -v
[?2004lorigin	https://github.com/heamkoppisetti/Assignment.git (fetch)
origin	https://github.com/heamkoppisetti/Assignment.git (push)
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git mergetool
[?2004l
This message is displayed because 'merge.tool' is not configured.
See 'git mergetool --tool-help' or 'git help config' for more details.
'git mergetool' will now attempt to use one of the following tools:
opendiff kdiff3 tkdiff xxdiff meld tortoisemerge gvimdiff diffuse diffmerge ecmerge p4merge araxis bc codecompare smerge emerge vimdiff nvimdiff
No files need merging
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git branch
[?2004l[?1h=* [32m(HEAD detached from origin/main)[m[m
  main[m[m
  testing[m[m
  version2[m[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git branch -v
[?2004l[?1h=* [32m(HEAD detached from origin/main)[m faabfd9 Changed the file[m
  main                            [m 5114347 [ahead 7] Final changes[m
  testing                         [m faabfd9 Changed the file[m
  version2                        [m 6544513 Combined commit[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ bit bran[K[K[K[K[K[K[K[Kgit be[Krancg[Kh --merged
[?2004l[?1h=* [32m(HEAD detached from origin/main)[m[m
  testing[m[m
  version2[m[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git branch --mergednmergedomerged-merged
[?2004l[?1h=  main[m[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git merge main
[?2004lhint: Waiting for your editor to close the file... [?2004h[?1049h[22;0;0t[1;35r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[33;68H(B[0;7m[ Reading... ](B[m[33;67H(B[0;7m[ Read 6 lines ](B[m[H(B[0;7m  GNU nano 6.2                                      /home/heam/myproject/my_assignment/.git/MERGE_MSG                                               [1;147H(B[m[34d(B[0;7m^G(B[m Help[34;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[34;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[34;113H(B[0;7mM-A(B[m Set Mark    (B[0;7mM-](B[m To Bracket[35d(B[0;7m^X(B[m Exit[35;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[35;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^/(B[m Go To Line   (B[0;7mM-E(B[m Redo[35;113H(B[0;7mM-6(B[m Copy[35;129H(B[0;7m^Q(B[m Where Was[2dMerge branch 'main' into HEAD[3d[36m# Please enter a commit message to explain why this merge is necessary,[4d# especially if it merges an updated upstream into a topic branch.[5d#[6d# Lines starting with '#' will be ignored, and an empty message aborts[7d# the commit.[2d[39m(B[m[?12l[?25h[?25l[33;67H (B[0;7m[ Writing... ](B[m[K[1;147H[33;66H(B[0;7m[ Wrote 6 lines ](B[m[?12l[?25h[2d[?25l[33d[J[35d[?12l[?25h[35;1H[?1049l[23;0;0t[?1l>[?2004l[KMerge made by the 'ort' strategy.
 1.txt | 1 [32m+[m
 2.txt | 3 [32m+++[m
 2 files changed, 4 insertions(+)
 create mode 100644 2.txt
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git merge mainbranch --no-merged[3Pmerged
[?2004l[?1h=* [32m(HEAD detached from origin/main)[m[m
  main[m[m
  testing[m[m
  version2[m[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git branch --merged[5Pmerge mainbranch --no-merged
[?2004l[?1h=[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git branch -d testing
[?2004lDeleted branch testing (was faabfd9).
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git brancg [K[Kh --move version [K2 new_version
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git branh [K[Kch -v
[?2004l[?1h=* [32m(HEAD detached from origin/main)[m 7f275e3 Merge branch 'main' into HEAD[m
  main                            [m 5114347 [ahead 7] Final changes[m
  new_version                     [m 6544513 Combined commit[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git push --set-upstream ot[K[Krigin [K[K[K[K[K[K[K orih[Kgin corrected[K[K[K[K[K[K[K[K[Knew_version
[?2004lUsername for 'https://github.com': heamkoppisetto i
Password for 'https://heamkoppisetti@github.com': 
Total 0 (delta 0), reused 0 (delta 0), pack-reused 0
remote: 
remote: Create a pull request for 'new_version' on GitHub by visiting:[K
remote:      https://github.com/heamkoppisetti/Assignment/pull/new/new_version[K
remote: 
To https://github.com/heamkoppisetti/Assignment.git
 * [new branch]      new_version -> new_version
Branch 'new_version' set up to track remote branch 'new_version' from 'origin'.
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git branch --all
[?2004l[?1h=* [32m(HEAD detached from origin/main)[m[m
  main[m[m
  new_version[m[m
  [31mremotes/origin/HEAD[m -> origin/main[m
  [31mremotes/origin/abc[m[m
  [31mremotes/origin/main[m[m
  [31mremotes/origin/new_version[m[m
  [31mremotes/origin/testing[m[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git o[Kpush origin --delete new_version
[?2004lUsername for 'https://github.com': heamkoppisetti
Password for 'https://heamkoppisetti@github.com': 
To https://github.com/heamkoppisetti/Assignment.git
 - [deleted]         new_version
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git g[Kfetch origin
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ gitche[K[K [K[K checkout -b b[Kserverfix origin/serverfix
[?2004lfatal: 'origin/serverfix' is not a commit and a branch 'serverfix' cannot be created from it
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git checkout -b serverfix origin/serverfix\\[K[K[K[K[K[K[K[K[K[K[K[K
[?2004lWarning: you are leaving 1 commit behind, not connected to
any of your branches:

  7f275e3 Merge branch 'main' into HEAD

If you want to keep it by creating a new branch, this may be a good time
to do so with:

 git branch <new-branch-name> 7f275e3

Branch 'serverfix' set up to track remote branch 'main' from 'origin'.
Switched to a new branch 'serverfix'
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git bra[K[K[Kcj[K[Kcheckout ot[Krigin
[?2004lNote: switching to 'origin'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at b966d23 Create README.md
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git meg[Krge main
[?2004lUpdating b966d23..5114347
Fast-forward
 1.txt     | 2 [32m++[m
 2.txt     | 3 [32m+++[m
 README    | 1 [32m+[m
 README.md | 5 [32m++++[m[31m-[m
 4 files changed, 10 insertions(+), 1 deletion(-)
 create mode 100644 2.txt
 create mode 100644 README
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git switch -c serverfix
[?2004lfatal: A branch named 'serverfix' already exists.
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git switch -c serverfix[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kcheckout serverfix
[?2004lPrevious HEAD position was 5114347 Final changes
Switched to branch 'serverfix'
Your branch is up to date with 'origin/main'.
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git chech[Kkout --track origin/main
[?2004lfatal: A branch named 'main' already exists.
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git checkout --track origin/main2
[?2004lfatal: 'origin/main2' is not a commit and a branch 'main2' cannot be created from it
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$  [Kgit branch -u origin
[?2004lBranch 'serverfix' set up to track remote branch 'main' from 'origin'.
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git merge serverfix
[?2004lAlready up to date.
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ fir [K[K[K[Kgit main [K[K[K[K[Kmerge main'[K
[?2004lUpdating b966d23..5114347
Fast-forward
 1.txt     | 2 [32m++[m
 2.txt     | 3 [32m+++[m
 README    | 1 [32m+[m
 README.md | 5 [32m++++[m[31m-[m
 4 files changed, 10 insertions(+), 1 deletion(-)
 create mode 100644 2.txt
 create mode 100644 README
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git merge mainserverfixbranch -u origin
[?2004lBranch 'serverfix' set up to track remote branch 'main' from 'origin'.
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git b[Kcheckout origin
[?2004lNote: switching to 'origin'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at b966d23 Create README.md
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git branch -vv
[?2004l[?1h=* [32m(HEAD detached at origin/main)[m b966d23 Create README.md[m
  main                          [m 5114347 [[34morigin/main[m: ahead 7] Final changes[m
  new_version                   [m 6544513 [[34morigin/new_version[m: gone] Combined commit[m
  serverfix                     [m 5114347 [[34morigin/main[m: ahead 7] Final changes[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git push origin --delete serverfix
[?2004lUsername for 'https://github.com': heamkoppisetti
Password for 'https://heamkoppisetti@github.com': 
error: unable to delete 'serverfix': remote ref does not exist
[31merror: failed to push some refs to 'https://github.com/heamkoppisetti/Assignment.git'
[m[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git checkp[Kout nwe[K[Kew_version
[?2004lPrevious HEAD position was b966d23 Create README.md
Switched to branch 'new_version'
Your branch is based on 'origin/new_version', but the upstream is gone.
  (use "git branch --unset-upstream" to fixup)
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git rebase origin
[?2004lCurrent branch new_version is up to date.
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ gto[K[Kit checkpi[K[Kout origin
[?2004lNote: switching to 'origin'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at b966d23 Create README.md
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git merhe[K[Kge new_version
[?2004lUpdating b966d23..6544513
Fast-forward
 1.txt     | 1 [32m+[m
 README    | 2 [32m++[m
 README.md | 5 [32m++++[m[31m-[m
 first.txt | 1 [32m+[m
 s.txt     | 1 [32m+[m
 5 files changed, 9 insertions(+), 1 deletion(-)
 create mode 100644 README
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git rebase --onto origin new_version testing
[?2004lfatal: no such branch/commit 'testing'
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ GIT [K[K[K[Kgit branch
[?2004l[?1h=* [32m(HEAD detached from origin/main)[m[m
  main[m[m
  new_version[m[m
  serverfix[m[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git branchrebase --onto origin new_version testing[K[K[K[K[K[K[Kserverfix
[?2004lRebasing (1/3)Rebasing (2/3)Auto-merging 1.txt
CONFLICT (content): Merge conflict in 1.txt
error: could not apply 92a6db1... Changes are made
[33mhint: Resolve all conflicts manually, mark them as resolved with[m
[33mhint: "git add/rm <conflicted_files>", then run "git rebase --continue".[m
[33mhint: You can instead skip this commit: run "git rebase --skip".[m
[33mhint: To abort and get back to the state before "git rebase", run "git rebase --abort".[m
Could not apply 92a6db1... Changes are made
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git be[Kram[K[K[K[Kcj[Kheckoout [K[K[K[Kut serverfix
[?2004l1.txt: needs merge
error: you need to resolve your current index first
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git branch
[?2004l[?1h=* [32m(no branch, rebasing serverfix)[m[m
  main[m[m
  new_version[m[m
  serverfix[m[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git status
[?2004l[31minteractive rebase in progress; onto [mb966d23
Last commands done (2 commands done):
   pick 08852c1 2.txt is added
   pick 92a6db1 Changes are made
Next command to do (1 remaining command):
   pick 5114347 Final changes
  (use "git rebase --edit-todo" to view and edit)
You are currently rebasing branch 'serverfix' on 'b966d23'.
  (fix conflicts and then run "git rebase --continue")
  (use "git rebase --skip" to skip this patch)
  (use "git rebase --abort" to check out the original branch)

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mmodified:   2.txt[m

Unmerged paths:
  (use "git restore --staged <file>..." to unstage)
  (use "git add <file>..." to mark resolution)
	[31mboth modified:   1.txt[m

[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ gti [K[K[Kit v[Kcommit -a -m "a[Knew add"
[?2004l[detached HEAD 0d02097] new add
 2 files changed, 6 insertions(+)
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git status
[?2004l[31minteractive rebase in progress; onto [mb966d23
Last commands done (2 commands done):
   pick 08852c1 2.txt is added
   pick 92a6db1 Changes are made
Next command to do (1 remaining command):
   pick 5114347 Final changes
  (use "git rebase --edit-todo" to view and edit)
You are currently editing a commit while rebasing branch 'serverfix' on 'b966d23'.
  (use "git commit --amend" to amend the current commit)
  (use "git rebase --continue" once you are satisfied with your changes)

nothing to commit, working tree clean
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git log
[?2004l[?1h=[33mcommit 0d02097219708a6470b1079e00776e578b3d0e2c[m[33m ([m[1;36mHEAD[m[33m)[m[m
Author: heamkoppisetti <heam.koppisetti@tigeranalytics.com>[m
Date:   Thu Oct 12 11:27:31 2023 +0530[m
[m
    new add[m
[m
[33mcommit f5492758cc91fad56999d594325a1ddfac05f6e7[m[m
Author: heamkoppisetti <heam.koppisetti@tigeranalytics.com>[m
Date:   Wed Oct 11 21:28:28 2023 +0530[m
[m
    2.txt is added[m
[m
[33mcommit b966d2393e0f40acb926cdeb28e1daa29800874d[m[33m ([m[1;31morigin/main[m[33m, [m[1;31morigin/HEAD[m[33m)[m[m
Author: heamkoppisetti <147583059+heamkoppisetti@users.noreply.github.com>[m
Date:   Wed Oct 11 22:05:00 2023 +0530[m
[m
    Create README.md[m
[m
[33mcommit b119a29baca9bff823de4cdda9f6d8aadce86edf[m[m
Merge: 4668d25 4a82947[m
Author: heamkoppisetti <147583059+heamkoppisetti@users.noreply.github.com>[m
Date:   Wed Oct 11 18:00:46 2023 +0530[m
[m
    Merge pull request #1 from heamkoppisetti/abc[m
    [m
    Abc[m
[m
[33mcommit 4a82947059a1fd33e5d2e5a68cd527f2466c49a1[m[33m ([m[1;31morigin/abc[m[33m)[m[m
Author: vyeshma.vanka <vyeshma.vanka@tigeranalytics.com>[m
Date:   Wed Oct 11 16:44:58 2023 +0530[m
[m
    first[m
[m
[33mcommit 64d98ccf8c4ef7421885a9a46a636875b468873b[m[m
:[K[K:[K[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ [7mgit clone https://github.com/tonychacon/blink[27mgit clone https://github.com/tonychacon/blink
[?2004lCloning into 'blink'...
remote: Enumerating objects: 23, done.[K
remote: Total 23 (delta 0), reused 0 (delta 0), pack-reused 23[K
Receiving objects:   4% (1/23)Receiving objects:   8% (2/23)Receiving objects:  13% (3/23)Receiving objects:  17% (4/23)Receiving objects:  21% (5/23)Receiving objects:  26% (6/23)Receiving objects:  30% (7/23)Receiving objects:  34% (8/23)Receiving objects:  39% (9/23)Receiving objects:  43% (10/23)Receiving objects:  47% (11/23)Receiving objects:  52% (12/23)Receiving objects:  56% (13/23)Receiving objects:  60% (14/23)Receiving objects:  65% (15/23)Receiving objects:  69% (16/23)Receiving objects:  73% (17/23)Receiving objects:  78% (18/23)Receiving objects:  82% (19/23)Receiving objects:  86% (20/23)Receiving objects:  91% (21/23)Receiving objects:  95% (22/23)Receiving objects: 100% (23/23)Receiving objects: 100% (23/23), done.
Resolving deltas:   0% (0/5)Resolving deltas:  20% (1/5)Resolving deltas:  40% (2/5)Resolving deltas:  60% (3/5)Resolving deltas:  80% (4/5)Resolving deltas: 100% (5/5)Resolving deltas: 100% (5/5), done.
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ cd blink
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment/blink[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment/blink[00m$ dir[K[K[Kgit checkout -b slow-blink
[?2004lSwitched to a new branch 'slow-blink'
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment/blink[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment/blink[00m$ ls'[K
[?2004lREADME.md  blink.ino
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment/blink[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment/blink[00m$ [7msed -i 's/1000/3000/' blink.ino[27msed -i 's/1000/3000/' blink.ino
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment/blink[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment/blink[00m$ f[Kgit diff --word-f[Kdiff
[?2004l[?1h=[1mdiff --git a/blink.ino b/blink.ino[m[m
[1mindex 15b9911..a6cc5a5 100644[m[m
[1m--- a/blink.ino[m[m
[1m+++ b/blink.ino[m[m
[36m@@ -18,7 +18,7 @@[m [mvoid setup() {[m[m
// the loop routine runs over and over again forever:[m[m
void loop() {[m[m
  digitalWrite(led, HIGH);   // turn the LED on (HIGH is the voltage level)[m[m
  [31m[-delay(1000);-][m[32m{+delay(3000);+}[m               // wait for a second[m
  digitalWrite(led, LOW);    // turn the LED off by making the voltage LOW[m[m
  [31m[-delay(1000);-][m[32m{+delay(3000);+}[m               // wait for a second[m
}[m[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment/blink[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment/blink[00m$ git commit -a -m 'Change the delay to 3 seconds'
[?2004l[slow-blink 33773b8] Change the delay to 3 seconds
 1 file changed, 2 insertions(+), 2 deletions(-)
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment/blink[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment/blink[00m$ git push origin slow-blink
[?2004lUsername for 'https://github.com': heamkoppisetti
Password for 'https://heamkoppisetti@github.com': 
remote: Permission to tonychacon/blink.git denied to heamkoppisetti.
fatal: unable to access 'https://github.com/tonychacon/blink/': The requested URL returned error: 403
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment/blink[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment/blink[00m$ git status
[?2004lOn branch slow-blink
nothing to commit, working tree clean
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment/blink[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment/blink[00m$ cd ..
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git staus[K[Ktus
[?2004l[31minteractive rebase in progress; onto [mb966d23
Last commands done (2 commands done):
   pick 08852c1 2.txt is added
   pick 92a6db1 Changes are made
Next command to do (1 remaining command):
   pick 5114347 Final changes
  (use "git rebase --edit-todo" to view and edit)
You are currently editing a commit while rebasing branch 'serverfix' on 'b966d23'.
  (use "git commit --amend" to amend the current commit)
  (use "git rebase --continue" once you are satisfied with your changes)

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	[31mblink/[m

nothing added to commit but untracked files present (use "git add" to track)
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git add blink/
[?2004lwarning: adding embedded git repository: blink
[33mhint: You've added another git repository inside your current repository.[m
[33mhint: Clones of the outer repository will not contain the contents of[m
[33mhint: the embedded repository and will not know how to obtain it.[m
[33mhint: If you meant to add a submodule, use:[m
[33mhint: [m
[33mhint: 	git submodule add <url> blink[m
[33mhint: [m
[33mhint: If you added this path by mistake, you can remove it from the[m
[33mhint: index with:[m
[33mhint: [m
[33mhint: 	git rm --cached blink[m
[33mhint: [m
[33mhint: See "git help submodule" for more information.[m
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git commit -m "blink/B[K[K[K[K[K[K[KBlink added"
[?2004l[detached HEAD d6a4553] Blink added
 1 file changed, 1 insertion(+)
 create mode 160000 blink
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git status
[?2004l[31minteractive rebase in progress; onto [mb966d23
Last commands done (2 commands done):
   pick 08852c1 2.txt is added
   pick 92a6db1 Changes are made
Next command to do (1 remaining command):
   pick 5114347 Final changes
  (use "git rebase --edit-todo" to view and edit)
You are currently editing a commit while rebasing branch 'serverfix' on 'b966d23'.
  (use "git commit --amend" to amend the current commit)
  (use "git rebase --continue" once you are satisfied with your changes)

nothing to commit, working tree clean
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git [K[K[Kit rebase --ci[Kontinue
[?2004lRebasing (3/3)[KSuccessfully rebased and updated refs/heads/serverfix.
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ fir [K[K[K[Kgit status'[K
[?2004lOn branch serverfix
Your branch is ahead of 'origin/main' by 4 commits.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git push -u origin new_version
[?2004lUsername for 'https://github.com': heamkoppisetti
Password for 'https://heamkoppisetti@github.com': 
Total 0 (delta 0), reused 0 (delta 0), pack-reused 0
remote: 
remote: Create a pull request for 'new_version' on GitHub by visiting:[K
remote:      https://github.com/heamkoppisetti/Assignment/pull/new/new_version[K
remote: 
To https://github.com/heamkoppisetti/Assignment.git
 * [new branch]      new_version -> new_version
Branch 'new_version' set up to track remote branch 'new_version' from 'origin'.
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ gti [K[K[Kit be[Krqan[K[Kaa[K[K[Kanch
[?2004l[?1h=  main[m[m
  new_version[m[m
* [32mserverfix[m[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ gti [K[K[Kit push -m [K[Ku origin serverfix
[?2004lUsername for 'https://github.com': heamkoppiser tti
Password for 'https://heamkoppisetti@github.com': 
Enumerating objects: 16, done.
Counting objects:   6% (1/15)Counting objects:  13% (2/15)Counting objects:  20% (3/15)Counting objects:  26% (4/15)Counting objects:  33% (5/15)Counting objects:  40% (6/15)Counting objects:  46% (7/15)Counting objects:  53% (8/15)Counting objects:  60% (9/15)Counting objects:  66% (10/15)Counting objects:  73% (11/15)Counting objects:  80% (12/15)Counting objects:  86% (13/15)Counting objects:  93% (14/15)Counting objects: 100% (15/15)Counting objects: 100% (15/15), done.
Delta compression using up to 8 threads
Compressing objects:   9% (1/11)Compressing objects:  18% (2/11)Compressing objects:  27% (3/11)Compressing objects:  36% (4/11)Compressing objects:  45% (5/11)Compressing objects:  54% (6/11)Compressing objects:  63% (7/11)Compressing objects:  72% (8/11)Compressing objects:  81% (9/11)Compressing objects:  90% (10/11)Compressing objects: 100% (11/11)Compressing objects: 100% (11/11), done.
Writing objects:   8% (1/12)Writing objects:  16% (2/12)Writing objects:  25% (3/12)Writing objects:  33% (4/12)Writing objects:  41% (5/12)Writing objects:  50% (6/12)Writing objects:  58% (7/12)Writing objects:  66% (8/12)Writing objects:  75% (9/12)Writing objects:  83% (10/12)Writing objects:  91% (11/12)Writing objects: 100% (12/12)Writing objects: 100% (12/12), 1.19 KiB | 1.19 MiB/s, done.
Total 12 (delta 4), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas:   0% (0/4)[Kremote: Resolving deltas:  25% (1/4)[Kremote: Resolving deltas:  50% (2/4)[Kremote: Resolving deltas:  75% (3/4)[Kremote: Resolving deltas: 100% (4/4)[Kremote: Resolving deltas: 100% (4/4), completed with 1 local object.[K
remote: 
remote: Create a pull request for 'serverfix' on GitHub by visiting:[K
remote:      https://github.com/heamkoppisetti/Assignment/pull/new/serverfix[K
remote: 
To https://github.com/heamkoppisetti/Assignment.git
 * [new branch]      serverfix -> serverfix
Branch 'serverfix' set up to track remote branch 'serverfix' from 'origin'.
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git chech[Kkout origin
[?2004lwarning: unable to rmdir 'blink': Directory not empty
Note: switching to 'origin'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at b966d23 Create README.md
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ gt [K[Kit status
[?2004l[31mHEAD detached at [morigin/main
Untracked files:
  (use "git add <file>..." to include in what will be committed)
	[31mblink/[m

nothing added to commit but untracked files present (use "git add" to track)
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git pull
[?2004lremote: Enumerating objects: 11, done.[K
remote: Counting objects:   9% (1/11)[Kremote: Counting objects:  18% (2/11)[Kremote: Counting objects:  27% (3/11)[Kremote: Counting objects:  36% (4/11)[Kremote: Counting objects:  45% (5/11)[Kremote: Counting objects:  54% (6/11)[Kremote: Counting objects:  63% (7/11)[Kremote: Counting objects:  72% (8/11)[Kremote: Counting objects:  81% (9/11)[Kremote: Counting objects:  90% (10/11)[Kremote: Counting objects: 100% (11/11)[Kremote: Counting objects: 100% (11/11), done.[K
remote: Compressing objects:  20% (1/5)[Kremote: Compressing objects:  40% (2/5)[Kremote: Compressing objects:  60% (3/5)[Kremote: Compressing objects:  80% (4/5)[Kremote: Compressing objects: 100% (5/5)[Kremote: Compressing objects: 100% (5/5), done.[K
remote: Total 5 (delta 1), reused 0 (delta 0), pack-reused 0[K
Unpacking objects:  20% (1/5)Unpacking objects:  40% (2/5)Unpacking objects:  60% (3/5)Unpacking objects:  80% (4/5)Unpacking objects: 100% (5/5)Unpacking objects: 100% (5/5), 2.05 KiB | 1.02 MiB/s, done.
From https://github.com/heamkoppisetti/Assignment
   b966d23..1b4d136  main       -> origin/main
   ea394fd..63a96fe  serverfix  -> origin/serverfix
You are not currently on a branch.
Please specify which branch you want to merge with.
See git-pull(1) for details.

    git pull <remote> <branch>

[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ h[Kgit push
[?2004lfatal: You are not currently on a branch.
To push the history leading to the current (detached HEAD)
state now, use

    git push origin HEAD:<name-of-remote-branch>

[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git branch
[?2004l[?1h=* [32m(HEAD detached at b966d23)[m[m
  main[m[m
  new_version[m[m
  serverfix[m[m
[K[?1l>[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git checkout main
[?2004lPrevious HEAD position was b966d23 Create README.md
Switched to branch 'main'
Your branch and 'origin/main' have diverged,
and have 3 and 8 different commits each, respectively.
  (use "git pull" to merge the remote branch into yours)
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git merge main
[?2004lAlready up to date.
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git rebase main
[?2004lCurrent branch main is up to date.
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git push
[?2004lUsername for 'https://github.com': heamkoppisetti
Password for 'https://heamkoppisetti@github.com': 
To https://github.com/heamkoppisetti/Assignment.git
 [31m! [rejected]       [m main -> main (non-fast-forward)
[31merror: failed to push some refs to 'https://github.com/heamkoppisetti/Assignment.git'
[m[33mhint: Updates were rejected because the tip of your current branch is behind[m
[33mhint: its remote counterpart. Integrate the remote changes (e.g.[m
[33mhint: 'git pull ...') before pushing again.[m
[33mhint: See the 'Note about fast-forwards' in 'git push --help' for details.[m
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ got[K[Kit sat[K[Ktatus
[?2004lOn branch main
Your branch and 'origin/main' have diverged,
and have 3 and 8 different commits each, respectively.
  (use "git pull" to merge the remote branch into yours)

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	[31mblink/[m

nothing added to commit but untracked files present (use "git add" to track)
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ got[K[Kit gue[Ki
[?2004lgit: 'gui' is not a git command. See 'git --help'.

The most similar commands are
	gc
	grep
	init
	pull
	push
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ w[Kman git gc
[?2004l[?1049h[22;0;0t[?1h=GIT-GC(1)                                                          Git Manual                                                          GIT-GC(1)[m
[m
[1mNAME[0m[m
       git-gc - Cleanup unnecessary files and optimize the local repository[m
[m
[1mSYNOPSIS[0m[m
       [4mgit[24m [4mgc[24m [--aggressive] [--auto] [--quiet] [--prune=<date> | --no-prune] [--force] [--keep-largest-pack][m
[m
[1mDESCRIPTION[0m[m
       Runs a number of housekeeping tasks within the current repository, such as compressing file revisions (to reduce disk space and increase[m
       performance), removing unreachable objects which may have been created from prior invocations of [4mgit[24m [4madd[24m, packing refs, pruning reflog,[m
       rerere metadata or stale working trees. May also update ancillary indexes such as the commit-graph.[m
[m
       When common porcelain operations that create objects are run, they will check whether the repository has grown substantially since the[m
       last maintenance, and if so run [1mgit[0m [1mgc[0m automatically. See [1mgc.auto[0m below for how to disable this behavior.[m
[m
       Running [1mgit[0m [1mgc[0m manually should only be needed when adding objects to a repository without regularly running such porcelain commands, to[m
       do a one-off repository optimization, or e.g. to clean up a suboptimal mass-import. See the "PACKFILE OPTIMIZATION" section in [1mgit-fast-[0m[m
       [1mimport[0m(1) for more details on the import case.[m
[m
[1mOPTIONS[0m[m
       --aggressive[m
           Usually [4mgit[24m [4mgc[24m runs very quickly while providing good disk space utilization and performance. This option will cause [4mgit[24m [4mgc[24m to more[m
           aggressively optimize the repository at the expense of taking much more time. The effects of this optimization are mostly persistent.[m
           See the "AGGRESSIVE" section below for details.[m
[m
       --auto[m
           With this option, [4mgit[24m [4mgc[24m checks whether any housekeeping is required; if not, it exits without performing any work.[m
[m
           See the [1mgc.auto[0m option in the "CONFIGURATION" section below for how this heuristic works.[m
[m
           Once housekeeping is triggered by exceeding the limits of configuration options such as [1mgc.auto[0m and [1mgc.autoPackLimit[0m, all other[m
           housekeeping tasks (e.g. rerere, working trees, reflog...) will be performed as well.[m
[m
[7m Manual page git-gc(1) line 1 (press h for help or q to quit)[27m[K[K[?1l>[?1049l[23;0;0t[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git gc
[?2004lEnumerating objects: 64, done.
Counting objects:   1% (1/64)Counting objects:   3% (2/64)Counting objects:   4% (3/64)Counting objects:   6% (4/64)Counting objects:   7% (5/64)Counting objects:   9% (6/64)Counting objects:  10% (7/64)Counting objects:  12% (8/64)Counting objects:  14% (9/64)Counting objects:  15% (10/64)Counting objects:  17% (11/64)Counting objects:  18% (12/64)Counting objects:  20% (13/64)Counting objects:  21% (14/64)Counting objects:  23% (15/64)Counting objects:  25% (16/64)Counting objects:  26% (17/64)Counting objects:  28% (18/64)Counting objects:  29% (19/64)Counting objects:  31% (20/64)Counting objects:  32% (21/64)Counting objects:  34% (22/64)Counting objects:  35% (23/64)Counting objects:  37% (24/64)Counting objects:  39% (25/64)Counting objects:  40% (26/64)Counting objects:  42% (27/64)Counting objects:  43% (28/64)Counting objects:  45% (29/64)Counting objects:  46% (30/64)Counting objects:  48% (31/64)Counting objects:  50% (32/64)Counting objects:  51% (33/64)Counting objects:  53% (34/64)Counting objects:  54% (35/64)Counting objects:  56% (36/64)Counting objects:  57% (37/64)Counting objects:  59% (38/64)Counting objects:  60% (39/64)Counting objects:  62% (40/64)Counting objects:  64% (41/64)Counting objects:  65% (42/64)Counting objects:  67% (43/64)Counting objects:  68% (44/64)Counting objects:  70% (45/64)Counting objects:  71% (46/64)Counting objects:  73% (47/64)Counting objects:  75% (48/64)Counting objects:  76% (49/64)Counting objects:  78% (50/64)Counting objects:  79% (51/64)Counting objects:  81% (52/64)Counting objects:  82% (53/64)Counting objects:  84% (54/64)Counting objects:  85% (55/64)Counting objects:  87% (56/64)Counting objects:  89% (57/64)Counting objects:  90% (58/64)Counting objects:  92% (59/64)Counting objects:  93% (60/64)Counting objects:  95% (61/64)Counting objects:  96% (62/64)Counting objects:  98% (63/64)Counting objects: 100% (64/64)Counting objects: 100% (64/64), done.
Delta compression using up to 8 threads
Compressing objects:   1% (1/51)Compressing objects:   3% (2/51)Compressing objects:   5% (3/51)Compressing objects:   7% (4/51)Compressing objects:   9% (5/51)Compressing objects:  11% (6/51)Compressing objects:  13% (7/51)Compressing objects:  15% (8/51)Compressing objects:  17% (9/51)Compressing objects:  19% (10/51)Compressing objects:  21% (11/51)Compressing objects:  23% (12/51)Compressing objects:  25% (13/51)Compressing objects:  27% (14/51)Compressing objects:  29% (15/51)Compressing objects:  31% (16/51)Compressing objects:  33% (17/51)Compressing objects:  35% (18/51)Compressing objects:  37% (19/51)Compressing objects:  39% (20/51)Compressing objects:  41% (21/51)Compressing objects:  43% (22/51)Compressing objects:  45% (23/51)Compressing objects:  47% (24/51)Compressing objects:  49% (25/51)Compressing objects:  50% (26/51)Compressing objects:  52% (27/51)Compressing objects:  54% (28/51)Compressing objects:  56% (29/51)Compressing objects:  58% (30/51)Compressing objects:  60% (31/51)Compressing objects:  62% (32/51)Compressing objects:  64% (33/51)Compressing objects:  66% (34/51)Compressing objects:  68% (35/51)Compressing objects:  70% (36/51)Compressing objects:  72% (37/51)Compressing objects:  74% (38/51)Compressing objects:  76% (39/51)Compressing objects:  78% (40/51)Compressing objects:  80% (41/51)Compressing objects:  82% (42/51)Compressing objects:  84% (43/51)Compressing objects:  86% (44/51)Compressing objects:  88% (45/51)Compressing objects:  90% (46/51)Compressing objects:  92% (47/51)Compressing objects:  94% (48/51)Compressing objects:  96% (49/51)Compressing objects:  98% (50/51)Compressing objects: 100% (51/51)Compressing objects: 100% (51/51), done.
Writing objects:   1% (1/64)Writing objects:   3% (2/64)Writing objects:   4% (3/64)Writing objects:   6% (4/64)Writing objects:   7% (5/64)Writing objects:   9% (6/64)Writing objects:  10% (7/64)Writing objects:  12% (8/64)Writing objects:  14% (9/64)Writing objects:  15% (10/64)Writing objects:  17% (11/64)Writing objects:  18% (12/64)Writing objects:  20% (13/64)Writing objects:  21% (14/64)Writing objects:  23% (15/64)Writing objects:  25% (16/64)Writing objects:  26% (17/64)Writing objects:  28% (18/64)Writing objects:  29% (19/64)Writing objects:  31% (20/64)Writing objects:  32% (21/64)Writing objects:  34% (22/64)Writing objects:  35% (23/64)Writing objects:  37% (24/64)Writing objects:  39% (25/64)Writing objects:  40% (26/64)Writing objects:  42% (27/64)Writing objects:  43% (28/64)Writing objects:  45% (29/64)Writing objects:  46% (30/64)Writing objects:  48% (31/64)Writing objects:  50% (32/64)Writing objects:  51% (33/64)Writing objects:  53% (34/64)Writing objects:  54% (35/64)Writing objects:  56% (36/64)Writing objects:  57% (37/64)Writing objects:  59% (38/64)Writing objects:  60% (39/64)Writing objects:  62% (40/64)Writing objects:  65% (42/64)Writing objects:  67% (43/64)Writing objects:  68% (44/64)Writing objects:  70% (45/64)Writing objects:  71% (46/64)Writing objects:  73% (47/64)Writing objects:  75% (48/64)Writing objects:  76% (49/64)Writing objects:  78% (50/64)Writing objects:  79% (51/64)Writing objects:  81% (52/64)Writing objects:  82% (53/64)Writing objects:  84% (54/64)Writing objects:  85% (55/64)Writing objects:  87% (56/64)Writing objects:  89% (57/64)Writing objects:  90% (58/64)Writing objects:  92% (59/64)Writing objects:  93% (60/64)Writing objects:  95% (61/64)Writing objects:  96% (62/64)Writing objects:  98% (63/64)Writing objects: 100% (64/64)Writing objects: 100% (64/64), done.
Total 64 (delta 20), reused 13 (delta 2), pack-reused 0
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ ls
[?2004l1.txt  2.txt  README  README.md  [0m[01;34mblink[0m  first.txt  s.txt
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git [K[K[K[Kman git grep
[?2004l[?1049h[22;0;0t[?1h=GIT-GREP(1)                                                        Git Manual                                                        GIT-GREP(1)[m
[m
[1mNAME[0m[m
       git-grep - Print lines matching a pattern[m
[m
[1mSYNOPSIS[0m[m
       [4mgit[24m [4mgrep[24m [-a | --text] [-I] [--textconv] [-i | --ignore-case] [-w | --word-regexp][m
                  [-v | --invert-match] [-h|-H] [--full-name][m
                  [-E | --extended-regexp] [-G | --basic-regexp][m
                  [-P | --perl-regexp][m
                  [-F | --fixed-strings] [-n | --line-number] [--column][m
                  [-l | --files-with-matches] [-L | --files-without-match][m
                  [(-O | --open-files-in-pager) [<pager>]][m
                  [-z | --null][m
                  [ -o | --only-matching ] [-c | --count] [--all-match] [-q | --quiet][m
                  [--max-depth <depth>] [--[no-]recursive][m
                  [--color[=<when>] | --no-color][m
                  [--break] [--heading] [-p | --show-function][m
                  [-A <post-context>] [-B <pre-context>] [-C <context>][m
                  [-W | --function-context][m
                  [--threads <num>][m
                  [-f <file>] [-e] <pattern>[m
                  [--and|--or|--not|(|)|-e <pattern>...][m
                  [--recurse-submodules] [--parent-basename <basename>][m
                  [ [--[no-]exclude-standard] [--cached | --no-index | --untracked] | <tree>...][m
                  [--] [<pathspec>...][m
[m
[1mDESCRIPTION[0m[m
       Look for specified patterns in the tracked files in the work tree, blobs registered in the index file, or blobs in given tree objects.[m
       Patterns are lists of one or more search expressions separated by newline characters. An empty string as search expression matches all[m
       lines.[m
[m
[1mOPTIONS[0m[m
       --cached[m
[7m Manual page git-grep(1) line 1 (press h for help or q to quit)[27m[K[K[?1l>[?1049l[23;0;0t[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git grep -a
[?2004lfatal: no pattern given
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git gui
[?2004lgit: 'gui' is not a git command. See 'git --help'.

The most similar commands are
	gc
	grep
	init
	pull
	push
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git insatll =[K[K[K[K[K[Ktall gui
[?2004lgit: 'install' is not a git command. See 'git --help'.

The most similar command is
	instaweb
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ g[Kinstaweb
[?2004linstaweb: command not found
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ git instaweb [K
[?2004llighttpd not found. Install lighttpd or use --httpd to specify another httpd daemon.
[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ code
[?2004l[?2004h(base) ]0;heam@TIGER01951: ~/myproject/my_assignment[01;32mheam@TIGER01951[00m:[01;34m~/myproject/my_assignment[00m$ exit
[?2004lexit

Script done on 2023-10-12 11:54:33+05:30 [COMMAND_EXIT_CODE="0"]
